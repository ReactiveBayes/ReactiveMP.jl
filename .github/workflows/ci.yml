name: CI
on:
  pull_request:
  push:
  schedule:
    - cron: '44 9 16 * *' # run the cron job one time per month
jobs:
  format: 
    name: Julia Formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1         
        with:
          version: '1.7'
      - run: make lint
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    needs: format
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1.7'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        env:
          PYTHON: ""
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
        env:
            PYTHON: ""
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      - name: Archive test artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: test/_output
  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.event.head_commit.message, '[benchmark]')
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-benchmark-${{ env.cache-name }}-${{ hashFiles('**/benchmark/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-benchmark-${{ env.cache-name }}-
            ${{ runner.os }}-benchmark-
            ${{ runner.os }}-
      - run: make benchmark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BENCHMARK_KEY: ${{ secrets.BENCHMARK_KEY }}
          PUBLISH_BENCHMARKS: true
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-docs-${{ env.cache-name }}-${{ hashFiles('**/docs/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-docs-${{ env.cache-name }}-
            ${{ runner.os }}-docs-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest          
        with:
          version: '1.7'
      - run: make docs
        env:
          PYTHON: ""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}