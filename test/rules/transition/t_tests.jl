@testitem "rules:Transition:in" begin
    using ReactiveMP, BayesBase, Random, ExponentialFamily, Distributions

    import ReactiveMP: @test_rules

    @testset "Belief Propagation: (m_out::Categorical, m_in::Categorical, q_a::TensorDirichlet)" begin
        @test_rules [check_type_promotion = false] Transition(:t1, Marginalisation) [
            (
                input = (
                    m_out = Categorical([0.0510559014089735, 0.05387178800920238, 0.8950723105818241]),
                    m_in = Categorical([0.054929868794045565, 0.04163049496789134, 0.9034396362380631]),
                    q_a = TensorDirichlet([1.0 6.0 32.0; 2.0 2.0 9.0; 5.0 5.0 6.0;;; 9.0 5.0 6.0; 4.0 10.0 6.0; 10.0 6.0 32.0;;; 6.0 1.0 8.0; 2.0 10.0 7.0; 1.0 3.0 8.0])
                ),
                output = Categorical([0.16071994681128632, 0.5608867375006992, 0.27839331568801456])
            ),
            (
                input = (
                    m_out = Categorical([0.03485782178222314, 0.01245130553310446, 0.9526908726846723]),
                    m_in = Categorical([0.06468167584028221, 0.0649680496982824, 0.8703502744614353]),
                    q_a = TensorDirichlet([8.0 9.0 37.0; 5.0 9.0 8.0; 6.0 9.0 3.0;;; 3.0 4.0 7.0; 7.0 4.0 3.0; 8.0 6.0 34.0;;; 5.0 10.0 2.0; 3.0 2.0 3.0; 4.0 10.0 7.0])
                ),
                output = Categorical([0.08216104573408281, 0.5240321267913837, 0.3938068274745334])
            ),
            (
                input = (
                    m_out = Categorical([0.013906945163896326, 0.014657675872327216, 0.9714353789637764]),
                    m_in = Categorical([0.06213023407554826, 0.07345989690934168, 0.8644098690151101]),
                    q_a = TensorDirichlet([10.0 1.0 36.0; 1.0 1.0 7.0; 2.0 9.0 4.0;;; 2.0 5.0 9.0; 1.0 9.0 1.0; 8.0 7.0 33.0;;; 6.0 2.0 1.0; 7.0 3.0 2.0; 1.0 7.0 4.0])
                ),
                output = Categorical([0.10371781881719036, 0.5257747986340537, 0.37050738254875604])
            ),
            (
                input = (
                    m_out = Categorical([0.061610939826165154, 0.06994219293747578, 0.868446867236359]),
                    m_in = Categorical([0.038785774762193144, 0.017316838524837008, 0.9438973867129699]),
                    q_a = TensorDirichlet([9.0 1.0 37.0; 9.0 9.0 8.0; 10.0 2.0 7.0;;; 5.0 10.0 2.0; 9.0 9.0 8.0; 8.0 5.0 33.0;;; 5.0 9.0 1.0; 2.0 4.0 10.0; 2.0 1.0 5.0])
                ),
                output = Categorical([0.1524663903301974, 0.5879220226683617, 0.2596115870014409])
            ),
            (
                input = (
                    m_out = Categorical([0.059854086369599824, 0.044893636911381464, 0.8952522767190187]),
                    m_in = Categorical([0.0056135853425655965, 0.03575690970940535, 0.958629504948029]),
                    q_a = TensorDirichlet([6.0 1.0 32.0; 8.0 7.0 1.0; 9.0 1.0 9.0;;; 10.0 10.0 4.0; 2.0 9.0 9.0; 3.0 2.0 33.0;;; 1.0 3.0 5.0; 7.0 8.0 7.0; 7.0 8.0 2.0])
                ),
                output = Categorical([0.22345398380365966, 0.6247689354236513, 0.1517770807726892])
            )
        ]
    end

    @testset "Belief Propagation: (m_out::Categorical, m_in::Categorical, q_a::TensorDirichlet, m_t2::Categorical)" begin
        @test_rules [check_type_promotion = false] Transition(:T1, Marginalisation) [
            (
                input = (
                    m_out = Categorical([0.08799332630703943, 0.29132551818215013, 0.6206811555108104]),
                    m_in = Categorical([0.11240998953463174, 0.5372891244719414, 0.35030088599342685]),
                    q_a = TensorDirichlet(
                        [
                            14.0 10.0 1.0; 6.0 8.0 1.0; 3.0 10.0 7.0;;; 14.0 3.0 3.0; 4.0 9.0 3.0; 5.0 5.0 14.0;;; 9.0 10.0 1.0; 3.0 7.0 4.0; 8.0 2.0 12.0;;;;
                            13.0 9.0 1.0; 9.0 7.0 8.0; 5.0 1.0 11.0;;; 8.0 7.0 4.0; 1.0 14.0 7.0; 4.0 10.0 6.0;;; 15.0 5.0 5.0; 7.0 6.0 5.0; 7.0 3.0 10.0;;;;
                            15.0 7.0 8.0; 5.0 10.0 9.0; 6.0 3.0 14.0;;; 7.0 1.0 6.0; 3.0 12.0 5.0; 3.0 5.0 9.0;;; 15.0 5.0 9.0; 9.0 12.0 10.0; 3.0 7.0 10.0;;;;
                            13.0 4.0 8.0; 4.0 8.0 2.0; 5.0 10.0 11.0;;; 15.0 4.0 8.0; 9.0 15.0 2.0; 5.0 2.0 12.0;;; 14.0 1.0 8.0; 10.0 6.0 5.0; 5.0 6.0 13.0
                        ]
                    ),
                    m_T2 = Categorical([0.09240952821382971, 0.3184996197469503, 0.3995918737894391, 0.18949897824978093])
                ),
                output = Categorical([0.3204124841029019, 0.34442455887321344, 0.3351629570238847])
            ),
            (
                input = (
                    m_out = Categorical([0.41399930903334414, 0.2569572285438312, 0.32904346242282473]),
                    m_in = Categorical([0.2712971200834005, 0.3827161804909996, 0.3459866994255999]),
                    q_a = TensorDirichlet(
                        [
                            15.0 4.0 4.0; 6.0 11.0 5.0; 1.0 1.0 14.0;;; 6.0 9.0 8.0; 10.0 10.0 5.0; 6.0 2.0 13.0;;; 13.0 2.0 7.0; 3.0 9.0 6.0; 5.0 5.0 7.0;;;;
                            7.0 2.0 9.0; 6.0 8.0 2.0; 6.0 4.0 12.0;;; 13.0 4.0 3.0; 1.0 10.0 2.0; 7.0 7.0 8.0;;; 9.0 9.0 4.0; 1.0 10.0 3.0; 4.0 4.0 12.0;;;;
                            13.0 5.0 5.0; 1.0 7.0 1.0; 7.0 5.0 11.0;;; 9.0 10.0 6.0; 6.0 13.0 1.0; 9.0 2.0 8.0;;; 13.0 9.0 4.0; 6.0 12.0 2.0; 10.0 1.0 13.0;;;;
                            9.0 6.0 8.0; 3.0 7.0 9.0; 8.0 4.0 11.0;;; 12.0 3.0 4.0; 2.0 11.0 9.0; 6.0 7.0 11.0;;; 13.0 6.0 10.0; 3.0 9.0 9.0; 10.0 10.0 6.0
                        ]
                    ),
                    m_T2 = Categorical([0.2284278504147311, 0.1734009515489395, 0.1685400610240271, 0.4296311370123022])
                ),
                output = Categorical([0.33252217570544323, 0.3303090112079051, 0.33716881308665164])
            ),
            (
                input = (
                    m_out = Categorical([0.28007415705382577, 0.362168131823555, 0.35775771112261917]),
                    m_in = Categorical([0.24450475682493267, 0.4963764838006123, 0.25911875937445494]),
                    q_a = TensorDirichlet(
                        [
                            12.0 9.0 1.0; 2.0 8.0 7.0; 10.0 1.0 13.0;;; 11.0 8.0 7.0; 10.0 14.0 7.0; 5.0 2.0 15.0;;; 8.0 4.0 4.0; 7.0 11.0 5.0; 4.0 10.0 6.0;;;;
                            14.0 3.0 7.0; 8.0 15.0 2.0; 5.0 8.0 15.0;;; 7.0 7.0 4.0; 6.0 11.0 2.0; 10.0 9.0 12.0;;; 11.0 7.0 4.0; 2.0 7.0 4.0; 1.0 1.0 15.0;;;;
                            13.0 7.0 5.0; 6.0 15.0 7.0; 9.0 5.0 14.0;;; 7.0 2.0 7.0; 1.0 7.0 2.0; 5.0 8.0 9.0;;; 13.0 5.0 2.0; 3.0 7.0 5.0; 9.0 10.0 14.0;;;;
                            14.0 10.0 3.0; 8.0 15.0 9.0; 8.0 2.0 13.0;;; 14.0 10.0 5.0; 2.0 11.0 4.0; 6.0 3.0 11.0;;; 9.0 8.0 10.0; 9.0 6.0 8.0; 5.0 3.0 6.0
                        ]
                    ),
                    m_T2 = Categorical([0.013289905256330505, 0.03916840092344259, 0.6158904501712571, 0.3316512436489697])
                ),
                output = Categorical([0.33852639912537374, 0.3291567669590365, 0.3323168339155897])
            ),
            (
                input = (
                    m_out = Categorical([0.231721871481526, 0.43974647264393085, 0.3285316558745432]),
                    m_in = Categorical([0.16173494859799328, 0.5444108919070189, 0.2938541594949879]),
                    q_a = TensorDirichlet(
                        [
                            11.0 8.0 5.0; 5.0 7.0 10.0; 2.0 1.0 11.0;;; 15.0 8.0 4.0; 8.0 12.0 3.0; 6.0 6.0 14.0;;; 13.0 10.0 8.0; 1.0 8.0 7.0; 8.0 8.0 14.0;;;;
                            8.0 4.0 8.0; 9.0 13.0 3.0; 8.0 2.0 7.0;;; 10.0 8.0 10.0; 5.0 11.0 8.0; 2.0 8.0 8.0;;; 10.0 3.0 2.0; 9.0 11.0 5.0; 10.0 4.0 15.0;;;;
                            10.0 7.0 9.0; 1.0 14.0 10.0; 10.0 5.0 15.0;;; 7.0 9.0 7.0; 5.0 14.0 1.0; 9.0 9.0 6.0;;; 15.0 7.0 3.0; 7.0 8.0 4.0; 2.0 2.0 14.0;;;;
                            14.0 7.0 2.0; 3.0 7.0 6.0; 4.0 9.0 15.0;;; 13.0 1.0 7.0; 3.0 12.0 4.0; 1.0 7.0 14.0;;; 7.0 7.0 3.0; 2.0 7.0 4.0; 8.0 9.0 10.0
                        ]
                    ),
                    m_T2 = Categorical([0.3924160844603588, 0.34208347405766765, 0.0742389939993073, 0.19126144748266627])
                ),
                output = Categorical([0.3336500717081419, 0.33405984098175184, 0.33229008731010634])
            ),
            (
                input = (
                    m_out = Categorical([0.3438709572699468, 0.327896945058581, 0.3282320976714722]),
                    m_in = Categorical([0.08064616359815222, 0.3016652714857759, 0.6176885649160718]),
                    q_a = TensorDirichlet(
                        [
                            10.0 9.0 2.0; 6.0 8.0 10.0; 7.0 1.0 11.0;;; 8.0 5.0 2.0; 5.0 7.0 3.0; 8.0 1.0 8.0;;; 15.0 5.0 7.0; 4.0 13.0 6.0; 3.0 8.0 7.0;;;;
                            10.0 9.0 4.0; 6.0 12.0 10.0; 6.0 6.0 12.0;;; 12.0 8.0 3.0; 3.0 15.0 3.0; 6.0 3.0 10.0;;; 6.0 5.0 8.0; 8.0 6.0 10.0; 8.0 5.0 11.0;;;;
                            15.0 2.0 7.0; 9.0 14.0 3.0; 7.0 4.0 11.0;;; 15.0 5.0 8.0; 10.0 6.0 2.0; 1.0 8.0 12.0;;; 8.0 2.0 8.0; 3.0 12.0 6.0; 5.0 8.0 10.0;;;;
                            14.0 2.0 2.0; 10.0 10.0 2.0; 1.0 4.0 9.0;;; 10.0 1.0 7.0; 1.0 6.0 3.0; 1.0 10.0 13.0;;; 6.0 8.0 4.0; 4.0 9.0 3.0; 3.0 2.0 9.0
                        ]
                    ),
                    m_T2 = Categorical([0.11248216922354308, 0.026994470113754852, 0.4375353107069617, 0.4229880499557404])
                ),
                output = Categorical([0.3314741303273284, 0.33435785748140795, 0.3341680121912637])
            )
        ]
    end

    @testset "Belief Propagation: (m_out::Categorical, m_in::Categorical, q_a::TensorDirichlet, m_t1::Categorical)" begin
        @test_rules [check_type_promotion = false] Transition(:t2, Marginalisation) [
            (
                input = (
                    m_out = Categorical([0.08799332630703943, 0.29132551818215013, 0.6206811555108104]),
                    m_in = Categorical([0.2516472953196383, 0.3420258883005958, 0.40632681637976575]),
                    q_a = TensorDirichlet(
                        [
                            14.0 10.0 1.0; 6.0 8.0 1.0; 3.0 10.0 7.0;;; 14.0 3.0 3.0; 4.0 9.0 3.0; 5.0 5.0 14.0;;; 9.0 10.0 1.0; 3.0 7.0 4.0; 8.0 2.0 12.0;;;;
                            13.0 9.0 1.0; 9.0 7.0 8.0; 5.0 1.0 11.0;;; 8.0 7.0 4.0; 1.0 14.0 7.0; 4.0 10.0 6.0;;; 15.0 5.0 5.0; 7.0 6.0 5.0; 7.0 3.0 10.0;;;;
                            15.0 7.0 8.0; 5.0 10.0 9.0; 6.0 3.0 14.0;;; 7.0 1.0 6.0; 3.0 12.0 5.0; 3.0 5.0 9.0;;; 15.0 5.0 9.0; 9.0 12.0 10.0; 3.0 7.0 10.0;;;;
                            13.0 4.0 8.0; 4.0 8.0 2.0; 5.0 10.0 11.0;;; 15.0 4.0 8.0; 9.0 15.0 2.0; 5.0 2.0 12.0;;; 14.0 1.0 8.0; 10.0 6.0 5.0; 5.0 6.0 13.0
                        ]
                    ),
                    m_T1 = Categorical([0.11240998953463174, 0.5372891244719414, 0.35030088599342685])
                ),
                output = Categorical([0.2736744772456484, 0.23881821104809484, 0.2388250291499574, 0.2486822825562994])
            ),
            (
                input = (
                    m_out = Categorical([0.41399930903334414, 0.2569572285438312, 0.32904346242282473]),
                    m_in = Categorical([0.3580424644840306, 0.31051652805186924, 0.3314410074641002]),
                    q_a = TensorDirichlet(
                        [
                            15.0 4.0 4.0; 6.0 11.0 5.0; 1.0 1.0 14.0;;; 6.0 9.0 8.0; 10.0 10.0 5.0; 6.0 2.0 13.0;;; 13.0 2.0 7.0; 3.0 9.0 6.0; 5.0 5.0 7.0;;;;
                            7.0 2.0 9.0; 6.0 8.0 2.0; 6.0 4.0 12.0;;; 13.0 4.0 3.0; 1.0 10.0 2.0; 7.0 7.0 8.0;;; 9.0 9.0 4.0; 1.0 10.0 3.0; 4.0 4.0 12.0;;;;
                            13.0 5.0 5.0; 1.0 7.0 1.0; 7.0 5.0 11.0;;; 9.0 10.0 6.0; 6.0 13.0 1.0; 9.0 2.0 8.0;;; 13.0 9.0 4.0; 6.0 12.0 2.0; 10.0 1.0 13.0;;;;
                            9.0 6.0 8.0; 3.0 7.0 9.0; 8.0 4.0 11.0;;; 12.0 3.0 4.0; 2.0 11.0 9.0; 6.0 7.0 11.0;;; 13.0 6.0 10.0; 3.0 9.0 9.0; 10.0 10.0 6.0
                        ]
                    ),
                    m_T1 = Categorical([0.2712971200834005, 0.3827161804909996, 0.3459866994255999])
                ),
                output = Categorical([0.2456412839560082, 0.25071835307616863, 0.25386159128651975, 0.24977877168130333])
            ),
            (
                input = (
                    m_out = Categorical([0.28007415705382577, 0.362168131823555, 0.35775771112261917]),
                    m_in = Categorical([0.31784517029280823, 0.34141019417661717, 0.3407446355305746]),
                    q_a = TensorDirichlet(
                        [
                            12.0 9.0 1.0; 2.0 8.0 7.0; 10.0 1.0 13.0;;; 11.0 8.0 7.0; 10.0 14.0 7.0; 5.0 2.0 15.0;;; 8.0 4.0 4.0; 7.0 11.0 5.0; 4.0 10.0 6.0;;;;
                            14.0 3.0 7.0; 8.0 15.0 2.0; 5.0 8.0 15.0;;; 7.0 7.0 4.0; 6.0 11.0 2.0; 10.0 9.0 12.0;;; 11.0 7.0 4.0; 2.0 7.0 4.0; 1.0 1.0 15.0;;;;
                            13.0 7.0 5.0; 6.0 15.0 7.0; 9.0 5.0 14.0;;; 7.0 2.0 7.0; 1.0 7.0 2.0; 5.0 8.0 9.0;;; 13.0 5.0 2.0; 3.0 7.0 5.0; 9.0 10.0 14.0;;;;
                            14.0 10.0 3.0; 8.0 15.0 9.0; 8.0 2.0 13.0;;; 14.0 10.0 5.0; 2.0 11.0 4.0; 6.0 3.0 11.0;;; 9.0 8.0 10.0; 9.0 6.0 8.0; 5.0 3.0 6.0
                        ]
                    ),
                    m_T1 = Categorical([0.24450475682493267, 0.4963764838006123, 0.25911875937445494])
                ),
                output = Categorical([0.2521503739599087, 0.25077911660660274, 0.25010306073581035, 0.24696744869767814])
            ),
            (
                input = (
                    m_out = Categorical([0.231721871481526, 0.43974647264393085, 0.3285316558745432]),
                    m_in = Categorical([0.305396640756791, 0.36076561844428456, 0.3338377407989245]),
                    q_a = TensorDirichlet(
                        [
                            11.0 8.0 5.0; 5.0 7.0 10.0; 2.0 1.0 11.0;;; 15.0 8.0 4.0; 8.0 12.0 3.0; 6.0 6.0 14.0;;; 13.0 10.0 8.0; 1.0 8.0 7.0; 8.0 8.0 14.0;;;;
                            8.0 4.0 8.0; 9.0 13.0 3.0; 8.0 2.0 7.0;;; 10.0 8.0 10.0; 5.0 11.0 8.0; 2.0 8.0 8.0;;; 10.0 3.0 2.0; 9.0 11.0 5.0; 10.0 4.0 15.0;;;;
                            10.0 7.0 9.0; 1.0 14.0 10.0; 10.0 5.0 15.0;;; 7.0 9.0 7.0; 5.0 14.0 1.0; 9.0 9.0 6.0;;; 15.0 7.0 3.0; 7.0 8.0 4.0; 2.0 2.0 14.0;;;;
                            14.0 7.0 2.0; 3.0 7.0 6.0; 4.0 9.0 15.0;;; 13.0 1.0 7.0; 3.0 12.0 4.0; 1.0 7.0 14.0;;; 7.0 7.0 3.0; 2.0 7.0 4.0; 8.0 9.0 10.0
                        ]
                    ),
                    m_T1 = Categorical([0.16173494859799328, 0.5444108919070189, 0.2938541594949879])
                ),
                output = Categorical([0.24769360939236879, 0.2570979400410685, 0.24636800327908906, 0.24884044728747362])
            ),
            (
                input = (
                    m_out = Categorical([0.3438709572699468, 0.327896945058581, 0.3282320976714722]),
                    m_in = Categorical([0.33437642195805395, 0.3321767052616158, 0.33344687278033025]),
                    q_a = TensorDirichlet(
                        [
                            10.0 9.0 2.0; 6.0 8.0 10.0; 7.0 1.0 11.0;;; 8.0 5.0 2.0; 5.0 7.0 3.0; 8.0 1.0 8.0;;; 15.0 5.0 7.0; 4.0 13.0 6.0; 3.0 8.0 7.0;;;;
                            10.0 9.0 4.0; 6.0 12.0 10.0; 6.0 6.0 12.0;;; 12.0 8.0 3.0; 3.0 15.0 3.0; 6.0 3.0 10.0;;; 6.0 5.0 8.0; 8.0 6.0 10.0; 8.0 5.0 11.0;;;;
                            15.0 2.0 7.0; 9.0 14.0 3.0; 7.0 4.0 11.0;;; 15.0 5.0 8.0; 10.0 6.0 2.0; 1.0 8.0 12.0;;; 8.0 2.0 8.0; 3.0 12.0 6.0; 5.0 8.0 10.0;;;;
                            14.0 2.0 2.0; 10.0 10.0 2.0; 1.0 4.0 9.0;;; 10.0 1.0 7.0; 1.0 6.0 3.0; 1.0 10.0 13.0;;; 6.0 8.0 4.0; 4.0 9.0 3.0; 3.0 2.0 9.0
                        ]
                    ),
                    m_T1 = Categorical([0.08064616359815222, 0.3016652714857759, 0.6176885649160718])
                ),
                output = Categorical([0.2505213451093424, 0.25068976800157844, 0.25100559750160933, 0.2477832893874698])
            )
        ]
    end
end