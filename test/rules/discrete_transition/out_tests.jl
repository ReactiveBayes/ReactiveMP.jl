
@testitem "rules:DiscreteTransition:out" begin
    using ReactiveMP, BayesBase, Random, ExponentialFamily, Distributions

    import ReactiveMP: @test_rules

    @testset "Belief Propagation: (q_in::PointMass, q_a::PointMass)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (
                input = (q_in = PointMass([0.1, 0.4, 0.5]), q_a = PointMass([0.2 0.1 0.7; 0.4 0.3 0.3; 0.1 0.6 0.3])),
                output = Categorical([0.29943853278212923, 0.32603993277541166, 0.3745215344424593])
            ),
            (
                input = (q_in = PointMass([0.2, 0.5, 0.3]), q_a = PointMass([0.1 0.8 0.1; 0.6 0.3 0.1; 0.2 0.4 0.4])),
                output = Categorical([0.3218092957943072, 0.2819969875260698, 0.39619371667962294])
            ),
            (input = (q_in = PointMass([1.0, 0.0, 0.0]), q_a = PointMass([1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0])), output = Categorical([1.0, 0.0, 0.0]))
        ]
    end

    @testset "Variational Bayes: (q_in::Categorical, q_a::Any)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [(
            input = (q_in = Categorical([0.1, 0.4, 0.5]), q_a = PointMass([0.2 0.1 0.7; 0.4 0.3 0.3; 0.1 0.6 0.3])),
            output = Categorical([0.2994385327821292, 0.3260399327754116, 0.37452153444245917])
        )]
    end

    @testset "Variational Bayes: (m_in::Categorical, q_a::DirichletCollection)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (input = (q_in = Categorical([0.1, 0.9]), q_a = DirichletCollection([0.1 0.1; 0.3 0.4])), output = Categorical([0.0004227712570263357, 0.9995772287429735])),
            (
                input = (q_in = Categorical([0.2, 0.5, 0.3]), q_a = DirichletCollection([0.1 0.8 0.1; 0.6 0.3 0.1; 0.2 0.4 0.4])),
                output = Categorical([0.0626653372827384, 0.10413392154490132, 0.8332007411723602])
            )
        ]
    end

    @testset "Variational Bayes: (m_in::DiscreteNonParametric, q_a::PointMass)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (
                input = (m_in = Categorical([0.1, 0.4, 0.5]), q_a = PointMass([0.2 0.1 0.7; 0.4 0.3 0.3; 0.1 0.6 0.3])),
                output = Categorical([0.3660714285714285, 0.27678571428571425, 0.35714285714285715])
            ),
            (
                input = (m_in = Categorical([0.2, 0.5, 0.3]), q_a = PointMass([0.1 0.8 0.1; 0.6 0.3 0.1; 0.2 0.4 0.4])),
                output = Categorical([0.40540540540540543, 0.2702702702702703, 0.32432432432432434])
            )
        ]
    end

    @testset "Variational Bayes: (m_in::PointMass, q_a::PointMass)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (input = (m_in = PointMass([0.0, 1.0, 0.0]), q_a = PointMass([0.2 0.1 0.7; 0.4 0.3 0.3; 0.1 0.6 0.3])), output = Categorical([0.1, 0.3, 0.6])),
            (input = (m_in = PointMass([1.0, 0.0, 0.0]), q_a = PointMass([0.1 0.8 0.1; 0.6 0.3 0.1; 0.2 0.4 0.4])), output = Categorical([0.1 / 0.9, 0.6 / 0.9, 0.2 / 0.9])),
            (input = (m_in = PointMass([0, 1, 0]), q_a = PointMass([0.2 0.1 0.7; 0.4 0.3 0.3; 0.1 0.6 0.3])), output = Categorical([0.1, 0.3, 0.6])),
            (input = (m_in = PointMass([1, 0, 0]), q_a = PointMass([0.1 0.8 0.1; 0.6 0.3 0.1; 0.2 0.4 0.4])), output = Categorical([0.1 / 0.9, 0.6 / 0.9, 0.2 / 0.9]))
        ]
    end

    @testset "Belief Propagation: (m_in::Categorical, q_a::DirichletCollection, m_t1::Categorical)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (
                input = (
                    m_in = Categorical([0.08799332630703943, 0.29132551818215013, 0.6206811555108104]),
                    q_a = DirichletCollection([10.0 2.0 9.0; 1.0 6.0 1.0; 10.0 7.0 10.0;;; 2.0 4.0 8.0; 2.0 3.0 7.0; 5.0 3.0 8.0;;; 1.0 7.0 8.0; 2.0 10.0 10.0; 8.0 9.0 3.0]),
                    m_T1 = Categorical([0.11240998953463174, 0.5372891244719414, 0.35030088599342685])
                ),
                output = Categorical([0.3434052652024092, 0.32330935346400147, 0.3332853813335894])
            ),
            (
                input = (
                    m_in = Categorical([0.41399930903334414, 0.2569572285438312, 0.32904346242282473]),
                    q_a = DirichletCollection([9.0 6.0 8.0; 8.0 9.0 2.0; 2.0 5.0 8.0;;; 3.0 10.0 6.0; 4.0 6.0 1.0; 7.0 8.0 3.0;;; 8.0 8.0 7.0; 1.0 8.0 4.0; 6.0 4.0 2.0]),
                    m_T1 = Categorical([0.2712971200834005, 0.3827161804909996, 0.3459866994255999])
                ),
                output = Categorical([0.4482838053046239, 0.24279036189260314, 0.3089258328027729])
            ),
            (
                input = (
                    m_in = Categorical([0.28007415705382577, 0.362168131823555, 0.35775771112261917]),
                    q_a = DirichletCollection([5.0 1.0 10.0; 9.0 5.0 4.0; 7.0 2.0 6.0;;; 9.0 7.0 5.0; 4.0 3.0 3.0; 2.0 4.0 8.0;;; 8.0 9.0 9.0; 6.0 10.0 10.0; 8.0 9.0 6.0]),
                    m_T1 = Categorical([0.24450475682493267, 0.4963764838006123, 0.25911875937445494])
                ),
                output = Categorical([0.3951613829932443, 0.2988663229112348, 0.3059722940955208])
            ),
            (
                input = (
                    m_in = Categorical([0.231721871481526, 0.43974647264393085, 0.3285316558745432]),
                    q_a = DirichletCollection([6.0 9.0 8.0; 9.0 9.0 4.0; 1.0 6.0 8.0;;; 3.0 6.0 8.0; 3.0 8.0 5.0; 4.0 5.0 2.0;;; 10.0 1.0 8.0; 2.0 7.0 1.0; 7.0 7.0 3.0]),
                    m_T1 = Categorical([0.16173494859799328, 0.5444108919070189, 0.2938541594949879])
                ),
                output = Categorical([0.3845876425194768, 0.3317654183958069, 0.2836469390847161])
            ),
            (
                input = (
                    m_in = Categorical([0.3050714581189855, 0.42249711097760284, 0.27243143090341165]),
                    q_a = DirichletCollection([10.0 5.0 1.0; 10.0 8.0 4.0; 10.0 4.0 1.0;;; 9.0 9.0 4.0; 1.0 10.0 3.0; 7.0 4.0 1.0;;; 4.0 8.0 6.0; 4.0 9.0 4.0; 3.0 9.0 5.0]),
                    m_T1 = Categorical([0.08064616359815222, 0.3016652714857759, 0.6176885649160718])
                ),
                output = Categorical([0.3824006540022958, 0.334754745371225, 0.28284460062647926])
            )
        ]
    end

    @testset "Belief Propagation: (m_in::Categorical, q_a::DirichletCollection, m_t1::Categorical, m_t2::Categorical)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (
                input = (
                    m_in = Categorical([0.08799332630703943, 0.29132551818215013, 0.6206811555108104]),
                    q_a = DirichletCollection(
                        [
                            14.0 10.0 1.0; 6.0 8.0 1.0; 3.0 10.0 7.0;;; 14.0 3.0 3.0; 4.0 9.0 3.0; 5.0 5.0 14.0;;; 9.0 10.0 1.0; 3.0 7.0 4.0; 8.0 2.0 12.0;;;;
                            13.0 9.0 1.0; 9.0 7.0 8.0; 5.0 1.0 11.0;;; 8.0 7.0 4.0; 1.0 14.0 7.0; 4.0 10.0 6.0;;; 15.0 5.0 5.0; 7.0 6.0 5.0; 7.0 3.0 10.0;;;;
                            15.0 7.0 8.0; 5.0 10.0 9.0; 6.0 3.0 14.0;;; 7.0 1.0 6.0; 3.0 12.0 5.0; 3.0 5.0 9.0;;; 15.0 5.0 9.0; 9.0 12.0 10.0; 3.0 7.0 10.0;;;;
                            13.0 4.0 8.0; 4.0 8.0 2.0; 5.0 10.0 11.0;;; 15.0 4.0 8.0; 9.0 15.0 2.0; 5.0 2.0 12.0;;; 14.0 1.0 8.0; 10.0 6.0 5.0; 5.0 6.0 13.0
                        ]
                    ),
                    m_T1 = Categorical([0.11240998953463174, 0.5372891244719414, 0.35030088599342685]),
                    m_T2 = Categorical([0.09240952821382971, 0.3184996197469503, 0.3995918737894391, 0.18949897824978093])
                ),
                output = Categorical([0.27036967103523596, 0.34093292224483207, 0.3886974067199319])
            ),
            (
                input = (
                    m_in = Categorical([0.41399930903334414, 0.2569572285438312, 0.32904346242282473]),
                    q_a = DirichletCollection(
                        [
                            15.0 4.0 4.0; 6.0 11.0 5.0; 1.0 1.0 14.0;;; 6.0 9.0 8.0; 10.0 10.0 5.0; 6.0 2.0 13.0;;; 13.0 2.0 7.0; 3.0 9.0 6.0; 5.0 5.0 7.0;;;;
                            7.0 2.0 9.0; 6.0 8.0 2.0; 6.0 4.0 12.0;;; 13.0 4.0 3.0; 1.0 10.0 2.0; 7.0 7.0 8.0;;; 9.0 9.0 4.0; 1.0 10.0 3.0; 4.0 4.0 12.0;;;;
                            13.0 5.0 5.0; 1.0 7.0 1.0; 7.0 5.0 11.0;;; 9.0 10.0 6.0; 6.0 13.0 1.0; 9.0 2.0 8.0;;; 13.0 9.0 4.0; 6.0 12.0 2.0; 10.0 1.0 13.0;;;;
                            9.0 6.0 8.0; 3.0 7.0 9.0; 8.0 4.0 11.0;;; 12.0 3.0 4.0; 2.0 11.0 9.0; 6.0 7.0 11.0;;; 13.0 6.0 10.0; 3.0 9.0 9.0; 10.0 10.0 6.0
                        ]
                    ),
                    m_T1 = Categorical([0.2712971200834005, 0.3827161804909996, 0.3459866994255999]),
                    m_T2 = Categorical([0.2284278504147311, 0.1734009515489395, 0.1685400610240271, 0.4296311370123022])
                ),
                output = Categorical([0.37903960313665536, 0.27173800064227394, 0.34922239622107076])
            ),
            (
                input = (
                    m_in = Categorical([0.28007415705382577, 0.362168131823555, 0.35775771112261917]),
                    q_a = DirichletCollection(
                        [
                            12.0 9.0 1.0; 2.0 8.0 7.0; 10.0 1.0 13.0;;; 11.0 8.0 7.0; 10.0 14.0 7.0; 5.0 2.0 15.0;;; 8.0 4.0 4.0; 7.0 11.0 5.0; 4.0 10.0 6.0;;;;
                            14.0 3.0 7.0; 8.0 15.0 2.0; 5.0 8.0 15.0;;; 7.0 7.0 4.0; 6.0 11.0 2.0; 10.0 9.0 12.0;;; 11.0 7.0 4.0; 2.0 7.0 4.0; 1.0 1.0 15.0;;;;
                            13.0 7.0 5.0; 6.0 15.0 7.0; 9.0 5.0 14.0;;; 7.0 2.0 7.0; 1.0 7.0 2.0; 5.0 8.0 9.0;;; 13.0 5.0 2.0; 3.0 7.0 5.0; 9.0 10.0 14.0;;;;
                            14.0 10.0 3.0; 8.0 15.0 9.0; 8.0 2.0 13.0;;; 14.0 10.0 5.0; 2.0 11.0 4.0; 6.0 3.0 11.0;;; 9.0 8.0 10.0; 9.0 6.0 8.0; 5.0 3.0 6.0
                        ]
                    ),
                    m_T1 = Categorical([0.24450475682493267, 0.4963764838006123, 0.25911875937445494]),
                    m_T2 = Categorical([0.013289905256330505, 0.03916840092344259, 0.6158904501712571, 0.3316512436489697])
                ),
                output = Categorical([0.3350657512455311, 0.27378913306703423, 0.39114511568743465])
            ),
            (
                input = (
                    m_in = Categorical([0.231721871481526, 0.43974647264393085, 0.3285316558745432]),
                    q_a = DirichletCollection(
                        [
                            11.0 8.0 5.0; 5.0 7.0 10.0; 2.0 1.0 11.0;;; 15.0 8.0 4.0; 8.0 12.0 3.0; 6.0 6.0 14.0;;; 13.0 10.0 8.0; 1.0 8.0 7.0; 8.0 8.0 14.0;;;;
                            8.0 4.0 8.0; 9.0 13.0 3.0; 8.0 2.0 7.0;;; 10.0 8.0 10.0; 5.0 11.0 8.0; 2.0 8.0 8.0;;; 10.0 3.0 2.0; 9.0 11.0 5.0; 10.0 4.0 15.0;;;;
                            10.0 7.0 9.0; 1.0 14.0 10.0; 10.0 5.0 15.0;;; 7.0 9.0 7.0; 5.0 14.0 1.0; 9.0 9.0 6.0;;; 15.0 7.0 3.0; 7.0 8.0 4.0; 2.0 2.0 14.0;;;;
                            14.0 7.0 2.0; 3.0 7.0 6.0; 4.0 9.0 15.0;;; 13.0 1.0 7.0; 3.0 12.0 4.0; 1.0 7.0 14.0;;; 7.0 7.0 3.0; 2.0 7.0 4.0; 8.0 9.0 10.0
                        ]
                    ),
                    m_T1 = Categorical([0.16173494859799328, 0.5444108919070189, 0.2938541594949879]),
                    m_T2 = Categorical([0.3924160844603588, 0.34208347405766765, 0.0742389939993073, 0.19126144748266627])
                ),
                output = Categorical([0.3324688090125486, 0.32875902717085775, 0.3387721638165937])
            ),
            (
                input = (
                    m_in = Categorical([0.3050714581189855, 0.42249711097760284, 0.27243143090341165]),
                    q_a = DirichletCollection(
                        [
                            10.0 9.0 2.0; 6.0 8.0 10.0; 7.0 1.0 11.0;;; 8.0 5.0 2.0; 5.0 7.0 3.0; 8.0 1.0 8.0;;; 15.0 5.0 7.0; 4.0 13.0 6.0; 3.0 8.0 7.0;;;;
                            10.0 9.0 4.0; 6.0 12.0 10.0; 6.0 6.0 12.0;;; 12.0 8.0 3.0; 3.0 15.0 3.0; 6.0 3.0 10.0;;; 6.0 5.0 8.0; 8.0 6.0 10.0; 8.0 5.0 11.0;;;;
                            15.0 2.0 7.0; 9.0 14.0 3.0; 7.0 4.0 11.0;;; 15.0 5.0 8.0; 10.0 6.0 2.0; 1.0 8.0 12.0;;; 8.0 2.0 8.0; 3.0 12.0 6.0; 5.0 8.0 10.0;;;;
                            14.0 2.0 2.0; 10.0 10.0 2.0; 1.0 4.0 9.0;;; 10.0 1.0 7.0; 1.0 6.0 3.0; 1.0 10.0 13.0;;; 6.0 8.0 4.0; 4.0 9.0 3.0; 3.0 2.0 9.0
                        ]
                    ),
                    m_T1 = Categorical([0.08064616359815222, 0.3016652714857759, 0.6176885649160718]),
                    m_T2 = Categorical([0.11248216922354308, 0.026994470113754852, 0.4375353107069617, 0.4229880499557404])
                ),
                output = Categorical([0.3438709572699468, 0.327896945058581, 0.3282320976714722])
            )
        ]
    end

    @testset "Variational message passing: (m_in::Categorical, q_a::DirichletCollection, q_T1::PointMass)" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [(
            input = (
                m_in = Categorical([0.1, 0.8, 0.1]),
                q_a = DirichletCollection([6.0 9.0 8.0; 9.0 9.0 4.0; 1.0 6.0 8.0;;; 3.0 6.0 8.0; 3.0 8.0 5.0; 4.0 5.0 2.0;;; 10.0 1.0 8.0; 2.0 7.0 1.0; 7.0 7.0 3.0]),
                q_T1 = PointMass([0, 0, 1])
            ),
            output = Categorical([0.1, 0.9, 0.0])
        )]
    end

    @testset "Belief propagation: higher orders" begin
        @test_rules [check_type_promotion = false] DiscreteTransition(:out, Marginalisation) [
            (
                input = (
                    m_in = Categorical([0.1, 0.8, 0.1]),
                    q_a = DirichletCollection(
                        [
                            3.0 4.0 1.0; 9.0 2.0 10.0; 6.0 1.0 3.0;;; 4.0 8.0 7.0; 2.0 3.0 10.0; 6.0 10.0 8.0;;; 8.0 3.0 5.0; 10.0 10.0 4.0; 10.0 10.0 10.0;;;; 9.0 2.0 1.0; 5.0 9.0 3.0; 6.0 3.0 6.0;;; 10.0 1.0 1.0; 6.0 5.0 3.0; 7.0 5.0 11.0;;; 5.0 3.0 6.0; 10.0 10.0 9.0; 6.0 6.0 9.0;;;; 6.0 1.0 4.0; 10.0 6.0 6.0; 10.0 2.0 3.0;;; 6.0 6.0 5.0; 3.0 6.0 2.0; 6.0 6.0 5.0;;; 6.0 3.0 4.0; 10.0 8.0 10.0; 10.0 2.0 6.0;;;;;
                            8.0 2.0 6.0; 9.0 11.0 4.0; 4.0 2.0 9.0;;; 8.0 3.0 5.0; 10.0 9.0 9.0; 7.0 4.0 7.0;;; 2.0 3.0 4.0; 6.0 4.0 9.0; 7.0 4.0 4.0;;;; 10.0 6.0 3.0; 4.0 10.0 4.0; 5.0 6.0 10.0;;; 9.0 4.0 8.0; 5.0 9.0 5.0; 10.0 10.0 8.0;;; 9.0 1.0 1.0; 6.0 2.0 6.0; 1.0 9.0 7.0;;;; 3.0 6.0 1.0; 6.0 7.0 7.0; 4.0 9.0 10.0;;; 10.0 7.0 2.0; 6.0 10.0 1.0; 6.0 6.0 8.0;;; 10.0 7.0 5.0; 4.0 7.0 6.0; 8.0 6.0 4.0;;;;;
                            8.0 7.0 2.0; 4.0 8.0 1.0; 5.0 9.0 10.0;;; 2.0 2.0 2.0; 5.0 8.0 1.0; 3.0 3.0 7.0;;; 7.0 4.0 6.0; 3.0 11.0 4.0; 3.0 8.0 11.0;;;; 6.0 3.0 8.0; 10.0 11.0 4.0; 3.0 6.0 11.0;;; 10.0 8.0 3.0; 1.0 11.0 7.0; 6.0 7.0 2.0;;; 5.0 2.0 1.0; 8.0 2.0 3.0; 8.0 6.0 2.0;;;; 3.0 5.0 10.0; 1.0 6.0 10.0; 4.0 3.0 3.0;;; 5.0 4.0 1.0; 2.0 4.0 5.0; 7.0 9.0 11.0;;; 9.0 5.0 3.0; 2.0 9.0 5.0; 6.0 7.0 11.0
                        ]
                    ),
                    m_T1 = Categorical([0.2, 0.5, 0.3]),
                    m_T2 = Categorical([0.7, 0.2, 0.1]),
                    m_T3 = Categorical([0.1, 0.8, 0.1])
                ),
                output = Categorical([0.2183026516004883, 0.4546987776160674, 0.32699857078344413])
            ),
            (
                input = (
                    m_in = Categorical([0.1, 0.8, 0.1]),
                    q_a = DirichletCollection(
                        [
                            7.0 4.0 5.0; 4.0 9.0 4.0; 7.0 9.0 3.0;;; 8.0 10.0 3.0; 4.0 8.0 6.0; 8.0 6.0 8.0;;; 10.0 4.0 5.0; 4.0 6.0 1.0; 5.0 5.0 5.0;;;; 8.0 2.0 3.0; 2.0 4.0 2.0; 6.0 8.0 4.0;;; 2.0 5.0 3.0; 10.0 4.0 7.0; 1.0 8.0 4.0;;; 3.0 6.0 2.0; 6.0 7.0 3.0; 1.0 3.0 4.0;;;; 8.0 7.0 3.0; 6.0 8.0 10.0; 5.0 7.0 9.0;;; 7.0 2.0 4.0; 5.0 7.0 10.0; 8.0 10.0 5.0;;; 5.0 7.0 9.0; 2.0 3.0 10.0; 7.0 7.0 8.0;;;;; 7.0 9.0 1.0; 2.0 3.0 5.0; 8.0 5.0 2.0;;; 2.0 2.0 3.0; 1.0 5.0 10.0; 7.0 1.0 4.0;;; 7.0 9.0 5.0; 5.0 7.0 6.0; 4.0 2.0 5.0;;;; 8.0 5.0 8.0; 5.0 5.0 6.0; 5.0 8.0 6.0;;; 8.0 4.0 9.0; 3.0 5.0 3.0; 10.0 7.0 11.0;;; 9.0 4.0 3.0; 10.0 7.0 9.0; 10.0 8.0 3.0;;;; 10.0 1.0 2.0; 7.0 2.0 2.0; 4.0 6.0 3.0;;; 3.0 1.0 7.0; 1.0 3.0 4.0; 6.0 7.0 7.0;;; 2.0 10.0 1.0; 10.0 3.0 6.0; 7.0 9.0 11.0;;;;; 3.0 9.0 10.0; 6.0 4.0 4.0; 9.0 1.0 6.0;;; 7.0 7.0 9.0; 2.0 2.0 4.0; 2.0 7.0 7.0;;; 8.0 2.0 7.0; 7.0 6.0 3.0; 6.0 1.0 3.0;;;; 3.0 9.0 4.0; 10.0 6.0 1.0; 10.0 5.0 9.0;;; 6.0 8.0 8.0; 10.0 9.0 6.0; 10.0 10.0 10.0;;; 4.0 5.0 7.0; 9.0 8.0 1.0; 3.0 5.0 2.0;;;; 9.0 6.0 3.0; 2.0 9.0 6.0; 2.0 7.0 10.0;;; 2.0 7.0 8.0; 5.0 7.0 3.0; 3.0 1.0 7.0;;; 6.0 6.0 5.0; 8.0 11.0 1.0; 3.0 2.0 5.0;;;;;;
                            10.0 1.0 8.0; 10.0 11.0 7.0; 1.0 2.0 6.0;;; 10.0 3.0 8.0; 6.0 10.0 4.0; 3.0 8.0 8.0;;; 10.0 1.0 10.0; 9.0 3.0 1.0; 3.0 6.0 7.0;;;; 11.0 5.0 7.0; 10.0 6.0 4.0; 4.0 1.0 2.0;;; 7.0 1.0 4.0; 9.0 6.0 1.0; 4.0 6.0 8.0;;; 3.0 5.0 8.0; 10.0 7.0 8.0; 6.0 5.0 2.0;;;; 10.0 2.0 1.0; 6.0 10.0 9.0; 9.0 2.0 11.0;;; 10.0 5.0 10.0; 6.0 7.0 10.0; 9.0 2.0 4.0;;; 9.0 10.0 6.0; 5.0 8.0 7.0; 4.0 9.0 9.0;;;;; 10.0 6.0 6.0; 10.0 7.0 9.0; 3.0 3.0 2.0;;; 6.0 7.0 5.0; 7.0 4.0 3.0; 8.0 8.0 4.0;;; 3.0 6.0 10.0; 5.0 10.0 5.0; 7.0 1.0 5.0;;;; 5.0 6.0 8.0; 6.0 6.0 7.0; 2.0 7.0 10.0;;; 9.0 2.0 3.0; 8.0 5.0 8.0; 9.0 9.0 9.0;;; 3.0 10.0 3.0; 10.0 4.0 9.0; 10.0 5.0 7.0;;;; 2.0 4.0 8.0; 4.0 2.0 7.0; 2.0 3.0 10.0;;; 8.0 9.0 2.0; 7.0 5.0 9.0; 10.0 5.0 11.0;;; 11.0 9.0 1.0; 6.0 10.0 6.0; 7.0 8.0 9.0;;;;; 3.0 6.0 8.0; 10.0 7.0 8.0; 3.0 2.0 10.0;;; 3.0 9.0 7.0; 1.0 3.0 9.0; 6.0 4.0 4.0;;; 9.0 8.0 6.0; 3.0 5.0 4.0; 5.0 4.0 4.0;;;; 5.0 10.0 7.0; 1.0 3.0 9.0; 3.0 10.0 3.0;;; 4.0 3.0 5.0; 4.0 2.0 1.0; 8.0 6.0 7.0;;; 9.0 2.0 10.0; 7.0 5.0 6.0; 2.0 6.0 5.0;;;; 9.0 7.0 2.0; 8.0 9.0 3.0; 3.0 9.0 3.0;;; 11.0 3.0 6.0; 7.0 7.0 8.0; 8.0 4.0 3.0;;; 9.0 8.0 1.0; 5.0 9.0 9.0; 5.0 5.0 3.0;;;;;;
                            6.0 3.0 1.0; 1.0 9.0 3.0; 7.0 7.0 4.0;;; 3.0 2.0 10.0; 8.0 5.0 10.0; 9.0 2.0 10.0;;; 6.0 10.0 6.0; 3.0 10.0 8.0; 8.0 10.0 4.0;;;; 4.0 7.0 7.0; 1.0 3.0 6.0; 6.0 10.0 2.0;;; 10.0 1.0 9.0; 7.0 9.0 7.0; 3.0 5.0 10.0;;; 5.0 10.0 3.0; 4.0 8.0 4.0; 7.0 7.0 7.0;;;; 9.0 8.0 8.0; 8.0 5.0 3.0; 10.0 10.0 10.0;;; 9.0 3.0 10.0; 2.0 10.0 3.0; 8.0 1.0 11.0;;; 5.0 4.0 6.0; 5.0 8.0 9.0; 1.0 4.0 2.0;;;;; 2.0 5.0 2.0; 6.0 11.0 9.0; 3.0 6.0 3.0;;; 2.0 1.0 8.0; 1.0 8.0 6.0; 9.0 10.0 4.0;;; 8.0 7.0 1.0; 5.0 10.0 9.0; 9.0 8.0 5.0;;;; 4.0 5.0 9.0; 5.0 3.0 3.0; 9.0 5.0 8.0;;; 8.0 6.0 3.0; 3.0 8.0 1.0; 9.0 5.0 4.0;;; 4.0 4.0 7.0; 10.0 5.0 6.0; 6.0 4.0 10.0;;;; 9.0 5.0 9.0; 9.0 3.0 8.0; 1.0 10.0 11.0;;; 10.0 9.0 3.0; 4.0 2.0 1.0; 3.0 8.0 3.0;;; 6.0 6.0 6.0; 4.0 9.0 4.0; 10.0 1.0 5.0;;;;; 11.0 5.0 6.0; 8.0 8.0 1.0; 6.0 10.0 4.0;;; 2.0 4.0 1.0; 4.0 9.0 8.0; 4.0 10.0 10.0;;; 10.0 4.0 8.0; 1.0 9.0 6.0; 5.0 4.0 3.0;;;; 2.0 7.0 8.0; 7.0 2.0 8.0; 4.0 3.0 3.0;;; 7.0 5.0 10.0; 4.0 10.0 1.0; 2.0 9.0 3.0;;; 8.0 1.0 2.0; 7.0 7.0 10.0; 3.0 8.0 9.0;;;; 8.0 4.0 8.0; 5.0 7.0 8.0; 6.0 8.0 7.0;;; 4.0 8.0 1.0; 3.0 3.0 6.0; 6.0 4.0 6.0;;; 11.0 2.0 4.0; 7.0 6.0 9.0; 8.0 6.0 8.0
                        ]
                    ),
                    m_T1 = Categorical([0.2, 0.5, 0.3]),
                    m_T2 = Categorical([0.7, 0.2, 0.1]),
                    m_T3 = Categorical([0.1, 0.8, 0.1]),
                    m_T4 = Categorical([0.9, 0.1, 0.0])
                ),
                output = Categorical([0.3310662469005146, 0.3855360346917547, 0.28339771840773076])
            ),
            (
                input = (
                    m_in = Categorical([0.1, 0.8, 0.1]),
                    q_a = DirichletCollection(
                        [
                            6.0 5.0 7.0; 8.0 10.0 1.0; 5.0 9.0 3.0;;; 9.0 4.0 3.0; 1.0 7.0 3.0; 7.0 10.0 3.0;;; 11.0 2.0 3.0; 8.0 9.0 1.0; 10.0 6.0 2.0;;;; 10.0 10.0 8.0; 7.0 8.0 6.0; 5.0 1.0 4.0;;; 7.0 8.0 1.0; 9.0 2.0 7.0; 8.0 8.0 8.0;;; 2.0 4.0 2.0; 9.0 10.0 3.0; 8.0 4.0 2.0;;;; 11.0 6.0 1.0; 5.0 2.0 2.0; 10.0 5.0 5.0;;; 2.0 9.0 9.0; 4.0 2.0 5.0; 6.0 5.0 2.0;;; 2.0 6.0 9.0; 2.0 4.0 6.0; 1.0 2.0 5.0;;;;; 10.0 5.0 6.0; 5.0 2.0 2.0; 10.0 6.0 7.0;;; 6.0 4.0 6.0; 8.0 7.0 7.0; 5.0 9.0 4.0;;; 2.0 9.0 9.0; 10.0 2.0 10.0; 1.0 5.0 5.0;;;; 5.0 4.0 3.0; 1.0 6.0 1.0; 4.0 6.0 11.0;;; 10.0 6.0 5.0; 6.0 10.0 3.0; 2.0 3.0 7.0;;; 6.0 7.0 8.0; 9.0 3.0 4.0; 7.0 1.0 9.0;;;; 10.0 6.0 9.0; 1.0 6.0 6.0; 3.0 10.0 4.0;;; 3.0 6.0 2.0; 2.0 10.0 5.0; 4.0 10.0 4.0;;; 2.0 4.0 10.0; 3.0 5.0 6.0; 3.0 1.0 7.0;;;;; 2.0 9.0 3.0; 6.0 2.0 9.0; 4.0 9.0 7.0;;; 2.0 7.0 2.0; 1.0 7.0 4.0; 5.0 10.0 2.0;;; 6.0 5.0 8.0; 5.0 5.0 3.0; 5.0 8.0 9.0;;;; 3.0 1.0 3.0; 10.0 11.0 9.0; 4.0 10.0 6.0;;; 6.0 8.0 8.0; 6.0 2.0 4.0; 9.0 10.0 6.0;;; 9.0 8.0 6.0; 2.0 2.0 2.0; 6.0 5.0 2.0;;;; 9.0 1.0 10.0; 2.0 10.0 7.0; 8.0 2.0 6.0;;; 5.0 4.0 2.0; 3.0 2.0 4.0; 6.0 3.0 9.0;;; 7.0 8.0 6.0; 6.0 10.0 3.0; 9.0 6.0 7.0;;;;;; 8.0 6.0 8.0; 3.0 6.0 8.0; 2.0 10.0 9.0;;; 10.0 6.0 8.0; 10.0 4.0 6.0; 5.0 3.0 5.0;;; 6.0 2.0 2.0; 10.0 7.0 6.0; 4.0 8.0 9.0;;;; 4.0 4.0 3.0; 4.0 3.0 2.0; 9.0 1.0 5.0;;; 11.0 4.0 4.0; 8.0 11.0 6.0; 3.0 10.0 10.0;;; 3.0 1.0 5.0; 4.0 2.0 2.0; 8.0 9.0 7.0;;;; 3.0 4.0 5.0; 8.0 7.0 8.0; 4.0 5.0 2.0;;; 4.0 4.0 8.0; 10.0 10.0 2.0; 7.0 5.0 11.0;;; 2.0 5.0 8.0; 3.0 5.0 4.0; 9.0 4.0 3.0;;;;; 6.0 10.0 7.0; 2.0 7.0 2.0; 5.0 4.0 2.0;;; 10.0 10.0 2.0; 2.0 10.0 4.0; 4.0 3.0 10.0;;; 3.0 3.0 1.0; 9.0 2.0 3.0; 2.0 2.0 8.0;;;; 8.0 3.0 5.0; 1.0 10.0 6.0; 7.0 1.0 4.0;;; 6.0 1.0 9.0; 7.0 6.0 10.0; 9.0 4.0 9.0;;; 11.0 6.0 5.0; 4.0 9.0 7.0; 3.0 2.0 10.0;;;; 6.0 5.0 5.0; 9.0 9.0 9.0; 4.0 10.0 10.0;;; 7.0 7.0 4.0; 6.0 3.0 9.0; 6.0 4.0 2.0;;; 6.0 9.0 9.0; 8.0 11.0 7.0; 5.0 10.0 5.0;;;;; 7.0 9.0 5.0; 8.0 3.0 6.0; 6.0 9.0 3.0;;; 9.0 5.0 10.0; 8.0 5.0 10.0; 10.0 4.0 4.0;;; 10.0 2.0 4.0; 3.0 6.0 5.0; 7.0 9.0 8.0;;;; 4.0 6.0 2.0; 1.0 3.0 8.0; 3.0 7.0 4.0;;; 2.0 7.0 6.0; 8.0 8.0 1.0; 1.0 2.0 7.0;;; 5.0 8.0 3.0; 2.0 5.0 10.0; 3.0 7.0 6.0;;;; 11.0 10.0 7.0; 2.0 8.0 7.0; 3.0 3.0 10.0;;; 2.0 10.0 2.0; 8.0 4.0 3.0; 8.0 2.0 11.0;;; 4.0 5.0 8.0; 3.0 3.0 6.0; 9.0 2.0 5.0;;;;;; 7.0 8.0 2.0; 1.0 5.0 7.0; 2.0 3.0 5.0;;; 9.0 7.0 8.0; 1.0 8.0 7.0; 4.0 1.0 8.0;;; 10.0 8.0 10.0; 1.0 9.0 1.0; 10.0 4.0 5.0;;;; 9.0 6.0 9.0; 10.0 5.0 8.0; 4.0 9.0 7.0;;; 11.0 2.0 1.0; 8.0 7.0 5.0; 7.0 9.0 4.0;;; 8.0 1.0 4.0; 8.0 5.0 3.0; 6.0 1.0 4.0;;;; 11.0 10.0 4.0; 10.0 9.0 2.0; 4.0 10.0 10.0;;; 11.0 4.0 7.0; 9.0 4.0 10.0; 3.0 7.0 2.0;;; 10.0 5.0 10.0; 9.0 7.0 10.0; 7.0 8.0 10.0;;;;; 6.0 2.0 7.0; 10.0 6.0 3.0; 7.0 3.0 11.0;;; 3.0 9.0 1.0; 6.0 8.0 8.0; 1.0 1.0 8.0;;; 10.0 1.0 6.0; 3.0 11.0 1.0; 4.0 8.0 8.0;;;; 5.0 5.0 2.0; 9.0 2.0 2.0; 7.0 6.0 11.0;;; 10.0 9.0 4.0; 7.0 9.0 6.0; 5.0 1.0 11.0;;; 5.0 8.0 7.0; 2.0 2.0 4.0; 8.0 4.0 11.0;;;; 4.0 9.0 7.0; 4.0 4.0 10.0; 6.0 5.0 2.0;;; 5.0 9.0 5.0; 6.0 10.0 6.0; 3.0 7.0 2.0;;; 6.0 3.0 2.0; 8.0 6.0 10.0; 9.0 10.0 10.0;;;;; 6.0 7.0 5.0; 6.0 4.0 8.0; 2.0 10.0 6.0;;; 7.0 5.0 5.0; 9.0 7.0 1.0; 1.0 6.0 5.0;;; 2.0 7.0 10.0; 5.0 5.0 3.0; 1.0 1.0 11.0;;;; 5.0 10.0 8.0; 1.0 4.0 7.0; 7.0 10.0 2.0;;; 7.0 6.0 9.0; 10.0 10.0 7.0; 5.0 1.0 9.0;;; 5.0 2.0 7.0; 3.0 9.0 10.0; 4.0 10.0 5.0;;;; 10.0 1.0 7.0; 8.0 6.0 7.0; 9.0 6.0 9.0;;; 8.0 10.0 6.0; 1.0 7.0 5.0; 1.0 6.0 6.0;;; 7.0 9.0 9.0; 7.0 2.0 8.0; 5.0 5.0 6.0;;;;;;;
                            4.0 5.0 4.0; 4.0 9.0 7.0; 6.0 3.0 11.0;;; 11.0 4.0 1.0; 3.0 9.0 4.0; 6.0 2.0 10.0;;; 10.0 6.0 4.0; 10.0 9.0 7.0; 6.0 5.0 7.0;;;; 5.0 9.0 6.0; 4.0 7.0 6.0; 9.0 6.0 8.0;;; 6.0 1.0 2.0; 10.0 2.0 9.0; 9.0 8.0 10.0;;; 10.0 8.0 9.0; 7.0 8.0 6.0; 10.0 5.0 10.0;;;; 7.0 8.0 5.0; 7.0 4.0 10.0; 4.0 1.0 5.0;;; 9.0 2.0 10.0; 2.0 9.0 5.0; 9.0 2.0 4.0;;; 9.0 9.0 9.0; 6.0 11.0 6.0; 6.0 8.0 5.0;;;;; 10.0 8.0 2.0; 10.0 7.0 1.0; 9.0 1.0 2.0;;; 9.0 3.0 5.0; 10.0 8.0 10.0; 4.0 10.0 7.0;;; 11.0 8.0 5.0; 6.0 11.0 6.0; 5.0 6.0 9.0;;;; 9.0 9.0 3.0; 5.0 6.0 6.0; 3.0 10.0 5.0;;; 4.0 7.0 2.0; 10.0 5.0 3.0; 3.0 4.0 10.0;;; 11.0 1.0 2.0; 10.0 7.0 2.0; 8.0 10.0 7.0;;;; 7.0 10.0 8.0; 6.0 6.0 6.0; 1.0 10.0 11.0;;; 2.0 4.0 9.0; 9.0 11.0 8.0; 3.0 9.0 6.0;;; 5.0 6.0 5.0; 1.0 2.0 6.0; 10.0 2.0 10.0;;;;; 4.0 10.0 1.0; 2.0 4.0 7.0; 4.0 8.0 11.0;;; 7.0 6.0 10.0; 9.0 6.0 6.0; 3.0 8.0 11.0;;; 9.0 9.0 10.0; 8.0 10.0 8.0; 7.0 7.0 4.0;;;; 2.0 6.0 8.0; 7.0 8.0 2.0; 6.0 7.0 4.0;;; 10.0 5.0 4.0; 1.0 11.0 3.0; 2.0 1.0 5.0;;; 3.0 8.0 3.0; 2.0 4.0 10.0; 7.0 4.0 3.0;;;; 9.0 5.0 9.0; 9.0 10.0 3.0; 4.0 4.0 5.0;;; 4.0 9.0 5.0; 1.0 11.0 5.0; 9.0 9.0 5.0;;; 8.0 7.0 1.0; 9.0 10.0 9.0; 2.0 1.0 4.0;;;;;; 11.0 3.0 8.0; 9.0 4.0 5.0; 1.0 5.0 11.0;;; 7.0 3.0 10.0; 1.0 4.0 8.0; 10.0 4.0 5.0;;; 2.0 8.0 1.0; 9.0 8.0 9.0; 2.0 9.0 3.0;;;; 3.0 9.0 2.0; 9.0 8.0 6.0; 2.0 7.0 3.0;;; 2.0 4.0 7.0; 2.0 8.0 5.0; 8.0 3.0 6.0;;; 4.0 5.0 9.0; 2.0 8.0 1.0; 6.0 5.0 10.0;;;; 3.0 9.0 3.0; 3.0 10.0 5.0; 7.0 8.0 7.0;;; 8.0 9.0 7.0; 10.0 6.0 7.0; 8.0 4.0 5.0;;; 6.0 5.0 6.0; 9.0 3.0 7.0; 6.0 3.0 2.0;;;;; 8.0 4.0 7.0; 10.0 6.0 3.0; 5.0 7.0 4.0;;; 10.0 3.0 5.0; 1.0 3.0 2.0; 10.0 3.0 9.0;;; 6.0 8.0 9.0; 10.0 5.0 9.0; 9.0 6.0 3.0;;;; 6.0 6.0 3.0; 4.0 4.0 4.0; 4.0 4.0 10.0;;; 6.0 4.0 5.0; 9.0 2.0 1.0; 7.0 6.0 8.0;;; 10.0 5.0 6.0; 3.0 6.0 6.0; 4.0 3.0 4.0;;;; 4.0 8.0 3.0; 3.0 8.0 1.0; 7.0 7.0 4.0;;; 9.0 10.0 3.0; 5.0 5.0 7.0; 6.0 3.0 2.0;;; 4.0 8.0 10.0; 6.0 3.0 5.0; 1.0 5.0 4.0;;;;; 9.0 9.0 1.0; 1.0 3.0 9.0; 6.0 7.0 5.0;;; 3.0 2.0 4.0; 3.0 5.0 9.0; 2.0 9.0 7.0;;; 8.0 7.0 8.0; 8.0 11.0 5.0; 10.0 3.0 8.0;;;; 6.0 3.0 10.0; 1.0 10.0 2.0; 1.0 5.0 10.0;;; 2.0 7.0 2.0; 3.0 3.0 1.0; 6.0 10.0 6.0;;; 6.0 3.0 6.0; 2.0 5.0 9.0; 8.0 4.0 3.0;;;; 8.0 5.0 9.0; 8.0 5.0 6.0; 1.0 1.0 8.0;;; 5.0 5.0 6.0; 9.0 4.0 7.0; 10.0 5.0 5.0;;; 11.0 3.0 8.0; 10.0 5.0 2.0; 8.0 5.0 5.0;;;;;; 2.0 3.0 7.0; 6.0 8.0 7.0; 10.0 3.0 3.0;;; 10.0 9.0 5.0; 5.0 2.0 10.0; 4.0 1.0 6.0;;; 4.0 4.0 4.0; 8.0 11.0 3.0; 1.0 9.0 5.0;;;; 3.0 3.0 2.0; 7.0 3.0 4.0; 1.0 5.0 8.0;;; 3.0 3.0 3.0; 6.0 4.0 1.0; 7.0 4.0 5.0;;; 10.0 3.0 8.0; 2.0 2.0 10.0; 9.0 10.0 7.0;;;; 10.0 4.0 1.0; 10.0 8.0 8.0; 4.0 10.0 8.0;;; 3.0 1.0 1.0; 1.0 6.0 5.0; 10.0 6.0 3.0;;; 2.0 8.0 2.0; 6.0 9.0 3.0; 10.0 2.0 5.0;;;;; 8.0 6.0 10.0; 3.0 6.0 9.0; 7.0 9.0 4.0;;; 7.0 6.0 7.0; 9.0 9.0 6.0; 9.0 10.0 9.0;;; 7.0 1.0 6.0; 7.0 8.0 10.0; 7.0 4.0 9.0;;;; 5.0 7.0 3.0; 1.0 8.0 6.0; 3.0 5.0 8.0;;; 6.0 8.0 9.0; 5.0 5.0 1.0; 6.0 3.0 10.0;;; 11.0 2.0 5.0; 2.0 2.0 4.0; 9.0 5.0 2.0;;;; 2.0 9.0 3.0; 7.0 10.0 4.0; 8.0 1.0 3.0;;; 8.0 5.0 9.0; 7.0 4.0 6.0; 9.0 4.0 4.0;;; 11.0 3.0 8.0; 9.0 7.0 8.0; 1.0 5.0 9.0;;;;; 10.0 9.0 2.0; 5.0 11.0 9.0; 4.0 2.0 4.0;;; 2.0 3.0 4.0; 10.0 8.0 3.0; 7.0 7.0 2.0;;; 11.0 9.0 8.0; 3.0 8.0 6.0; 3.0 4.0 5.0;;;; 6.0 8.0 5.0; 7.0 5.0 4.0; 6.0 5.0 7.0;;; 4.0 2.0 6.0; 8.0 7.0 9.0; 2.0 7.0 3.0;;; 6.0 1.0 10.0; 7.0 11.0 8.0; 9.0 9.0 3.0;;;; 3.0 10.0 3.0; 10.0 7.0 7.0; 1.0 2.0 5.0;;; 3.0 5.0 7.0; 9.0 8.0 1.0; 4.0 7.0 3.0;;; 5.0 5.0 6.0; 8.0 7.0 2.0; 9.0 4.0 8.0;;;;;;;
                            10.0 5.0 8.0; 3.0 3.0 7.0; 6.0 10.0 2.0;;; 4.0 1.0 4.0; 7.0 11.0 7.0; 2.0 10.0 7.0;;; 7.0 10.0 3.0; 6.0 4.0 10.0; 3.0 2.0 11.0;;;; 4.0 6.0 6.0; 1.0 10.0 1.0; 6.0 10.0 7.0;;; 6.0 8.0 4.0; 8.0 7.0 1.0; 6.0 10.0 7.0;;; 3.0 2.0 2.0; 6.0 7.0 1.0; 4.0 6.0 8.0;;;; 4.0 3.0 8.0; 5.0 7.0 2.0; 7.0 3.0 10.0;;; 11.0 9.0 1.0; 2.0 4.0 3.0; 3.0 4.0 3.0;;; 11.0 9.0 10.0; 5.0 10.0 2.0; 7.0 4.0 4.0;;;;; 10.0 10.0 3.0; 9.0 3.0 5.0; 3.0 2.0 8.0;;; 4.0 2.0 7.0; 1.0 4.0 9.0; 1.0 1.0 2.0;;; 9.0 7.0 3.0; 10.0 9.0 5.0; 6.0 3.0 8.0;;;; 6.0 9.0 7.0; 9.0 11.0 5.0; 7.0 4.0 8.0;;; 5.0 10.0 6.0; 2.0 7.0 4.0; 6.0 6.0 9.0;;; 11.0 5.0 7.0; 1.0 8.0 8.0; 2.0 3.0 2.0;;;; 7.0 8.0 7.0; 5.0 11.0 9.0; 1.0 9.0 10.0;;; 7.0 2.0 5.0; 9.0 11.0 6.0; 2.0 8.0 5.0;;; 3.0 1.0 4.0; 9.0 7.0 4.0; 9.0 9.0 3.0;;;;; 2.0 3.0 3.0; 6.0 3.0 5.0; 10.0 10.0 2.0;;; 9.0 2.0 6.0; 6.0 3.0 5.0; 1.0 6.0 5.0;;; 9.0 2.0 3.0; 10.0 7.0 4.0; 5.0 7.0 3.0;;;; 9.0 6.0 8.0; 9.0 3.0 5.0; 6.0 3.0 6.0;;; 2.0 8.0 2.0; 2.0 4.0 10.0; 2.0 6.0 3.0;;; 2.0 9.0 8.0; 4.0 7.0 6.0; 1.0 10.0 3.0;;;; 6.0 3.0 4.0; 6.0 9.0 4.0; 3.0 7.0 11.0;;; 4.0 10.0 3.0; 7.0 8.0 1.0; 8.0 6.0 5.0;;; 2.0 4.0 7.0; 6.0 9.0 9.0; 3.0 9.0 5.0;;;;;; 5.0 3.0 2.0; 9.0 3.0 5.0; 10.0 7.0 4.0;;; 9.0 8.0 9.0; 2.0 4.0 5.0; 6.0 10.0 9.0;;; 7.0 3.0 9.0; 5.0 11.0 4.0; 3.0 6.0 5.0;;;; 3.0 4.0 9.0; 8.0 11.0 2.0; 4.0 3.0 9.0;;; 11.0 9.0 3.0; 10.0 5.0 8.0; 9.0 5.0 10.0;;; 3.0 2.0 7.0; 7.0 2.0 9.0; 10.0 7.0 4.0;;;; 11.0 6.0 7.0; 5.0 3.0 4.0; 1.0 7.0 7.0;;; 6.0 2.0 10.0; 3.0 11.0 2.0; 7.0 10.0 3.0;;; 11.0 10.0 10.0; 2.0 11.0 3.0; 6.0 5.0 6.0;;;;; 2.0 6.0 7.0; 4.0 11.0 5.0; 2.0 7.0 5.0;;; 7.0 10.0 10.0; 2.0 8.0 4.0; 4.0 9.0 3.0;;; 9.0 2.0 4.0; 8.0 7.0 4.0; 7.0 6.0 4.0;;;; 4.0 3.0 3.0; 9.0 7.0 10.0; 4.0 7.0 3.0;;; 11.0 8.0 8.0; 6.0 11.0 1.0; 6.0 8.0 11.0;;; 8.0 9.0 8.0; 10.0 6.0 1.0; 1.0 8.0 5.0;;;; 4.0 10.0 10.0; 9.0 6.0 4.0; 8.0 1.0 2.0;;; 5.0 9.0 5.0; 4.0 7.0 1.0; 10.0 2.0 8.0;;; 6.0 9.0 8.0; 7.0 2.0 3.0; 4.0 9.0 8.0;;;;; 4.0 9.0 8.0; 8.0 4.0 3.0; 6.0 10.0 8.0;;; 6.0 3.0 6.0; 4.0 7.0 3.0; 8.0 2.0 3.0;;; 5.0 8.0 6.0; 4.0 6.0 9.0; 7.0 7.0 5.0;;;; 5.0 10.0 7.0; 5.0 7.0 2.0; 10.0 8.0 8.0;;; 2.0 1.0 2.0; 2.0 2.0 9.0; 5.0 1.0 5.0;;; 3.0 5.0 5.0; 7.0 8.0 1.0; 4.0 3.0 4.0;;;; 9.0 7.0 3.0; 8.0 3.0 1.0; 7.0 4.0 9.0;;; 8.0 7.0 1.0; 3.0 3.0 9.0; 6.0 7.0 11.0;;; 4.0 9.0 3.0; 5.0 6.0 3.0; 8.0 8.0 4.0;;;;;; 8.0 6.0 6.0; 7.0 8.0 7.0; 1.0 3.0 3.0;;; 11.0 10.0 7.0; 10.0 4.0 5.0; 6.0 3.0 4.0;;; 7.0 2.0 1.0; 8.0 3.0 6.0; 10.0 6.0 9.0;;;; 6.0 7.0 4.0; 5.0 8.0 3.0; 3.0 2.0 6.0;;; 10.0 6.0 10.0; 9.0 6.0 1.0; 7.0 6.0 8.0;;; 3.0 8.0 6.0; 3.0 2.0 5.0; 3.0 5.0 9.0;;;; 4.0 9.0 5.0; 5.0 5.0 7.0; 2.0 5.0 8.0;;; 11.0 8.0 8.0; 10.0 4.0 8.0; 2.0 1.0 3.0;;; 3.0 10.0 9.0; 2.0 6.0 9.0; 3.0 9.0 4.0;;;;; 10.0 7.0 8.0; 9.0 2.0 3.0; 3.0 4.0 6.0;;; 6.0 1.0 5.0; 6.0 8.0 2.0; 6.0 6.0 10.0;;; 10.0 3.0 10.0; 8.0 3.0 10.0; 2.0 10.0 10.0;;;; 3.0 5.0 9.0; 6.0 10.0 6.0; 7.0 1.0 9.0;;; 5.0 3.0 10.0; 1.0 10.0 8.0; 5.0 1.0 11.0;;; 6.0 3.0 1.0; 6.0 10.0 10.0; 7.0 9.0 9.0;;;; 2.0 4.0 4.0; 1.0 2.0 4.0; 6.0 5.0 7.0;;; 9.0 7.0 10.0; 7.0 4.0 9.0; 10.0 1.0 7.0;;; 2.0 1.0 4.0; 8.0 4.0 10.0; 3.0 3.0 6.0;;;;; 3.0 4.0 7.0; 5.0 9.0 9.0; 5.0 7.0 8.0;;; 7.0 3.0 3.0; 9.0 7.0 4.0; 2.0 8.0 3.0;;; 2.0 1.0 4.0; 2.0 3.0 6.0; 4.0 1.0 5.0;;;; 3.0 10.0 1.0; 9.0 10.0 6.0; 8.0 9.0 9.0;;; 8.0 9.0 6.0; 6.0 4.0 7.0; 2.0 10.0 2.0;;; 6.0 7.0 9.0; 9.0 11.0 10.0; 3.0 5.0 10.0;;;; 3.0 9.0 4.0; 2.0 6.0 5.0; 9.0 1.0 6.0;;; 7.0 10.0 3.0; 9.0 6.0 7.0; 4.0 6.0 5.0;;; 9.0 5.0 6.0; 5.0 6.0 9.0; 9.0 4.0 11.0
                        ]
                    ),
                    m_T1 = Categorical([0.2, 0.5, 0.3]),
                    m_T2 = Categorical([0.7, 0.2, 0.1]),
                    m_T3 = Categorical([0.1, 0.8, 0.1]),
                    m_T4 = Categorical([0.9, 0.1, 0.0]),
                    m_T5 = Categorical([0.05, 0.1, 0.85])
                ),
                output = Categorical([0.3430234097639056, 0.40437253136229717, 0.2526040588737973])
            ),
            (
                input = (
                    m_in = Categorical([0.1, 0.8, 0.1]),
                    q_a = DirichletCollection(
                        [
                            5.0 6.0 2.0; 9.0 6.0 6.0; 6.0 1.0 8.0;;; 3.0 9.0 2.0; 2.0 7.0 5.0; 9.0 8.0 7.0;;; 10.0 5.0 10.0; 6.0 11.0 7.0; 1.0 9.0 2.0;;;; 4.0 1.0 7.0; 3.0 9.0 7.0; 7.0 4.0 5.0;;; 10.0 6.0 1.0; 4.0 2.0 4.0; 10.0 3.0 3.0;;; 3.0 5.0 6.0; 10.0 2.0 3.0; 6.0 4.0 7.0;;;; 9.0 8.0 7.0; 10.0 6.0 4.0; 4.0 4.0 9.0;;; 9.0 3.0 4.0; 3.0 11.0 10.0; 3.0 10.0 6.0;;; 5.0 5.0 8.0; 1.0 8.0 9.0; 1.0 6.0 9.0;;;;; 6.0 1.0 1.0; 8.0 10.0 5.0; 3.0 2.0 8.0;;; 4.0 5.0 7.0; 10.0 9.0 1.0; 7.0 2.0 2.0;;; 10.0 3.0 2.0; 10.0 4.0 4.0; 2.0 10.0 9.0;;;; 3.0 2.0 9.0; 9.0 3.0 2.0; 5.0 10.0 6.0;;; 10.0 8.0 10.0; 9.0 9.0 6.0; 8.0 1.0 10.0;;; 11.0 7.0 5.0; 4.0 9.0 9.0; 4.0 10.0 2.0;;;; 11.0 2.0 6.0; 2.0 4.0 2.0; 7.0 1.0 5.0;;; 11.0 6.0 10.0; 6.0 11.0 10.0; 4.0 5.0 6.0;;; 7.0 4.0 9.0; 10.0 3.0 1.0; 1.0 5.0 9.0;;;;; 3.0 1.0 10.0; 3.0 10.0 5.0; 4.0 6.0 11.0;;; 5.0 10.0 10.0; 10.0 7.0 7.0; 4.0 9.0 4.0;;; 8.0 7.0 5.0; 9.0 6.0 8.0; 10.0 1.0 5.0;;;; 9.0 5.0 2.0; 9.0 8.0 2.0; 8.0 4.0 11.0;;; 10.0 7.0 1.0; 4.0 3.0 4.0; 7.0 6.0 9.0;;; 6.0 4.0 3.0; 4.0 7.0 6.0; 3.0 9.0 5.0;;;; 5.0 7.0 9.0; 7.0 9.0 5.0; 1.0 4.0 10.0;;; 9.0 6.0 5.0; 2.0 4.0 10.0; 3.0 10.0 9.0;;; 10.0 5.0 9.0; 8.0 6.0 7.0; 1.0 10.0 10.0;;;;;; 5.0 4.0 5.0; 4.0 2.0 9.0; 10.0 2.0 10.0;;; 11.0 6.0 3.0; 7.0 4.0 6.0; 10.0 6.0 10.0;;; 11.0 9.0 6.0; 4.0 9.0 1.0; 6.0 7.0 3.0;;;; 3.0 2.0 1.0; 7.0 7.0 9.0; 7.0 8.0 9.0;;; 6.0 9.0 4.0; 1.0 3.0 3.0; 3.0 3.0 7.0;;; 4.0 1.0 4.0; 4.0 11.0 6.0; 4.0 10.0 7.0;;;; 10.0 5.0 9.0; 7.0 10.0 10.0; 9.0 10.0 4.0;;; 5.0 10.0 3.0; 5.0 8.0 9.0; 2.0 4.0 10.0;;; 9.0 5.0 8.0; 1.0 7.0 10.0; 8.0 8.0 5.0;;;;; 10.0 7.0 4.0; 10.0 9.0 1.0; 4.0 8.0 4.0;;; 9.0 6.0 7.0; 4.0 11.0 8.0; 7.0 7.0 10.0;;; 5.0 8.0 5.0; 10.0 6.0 4.0; 10.0 5.0 4.0;;;; 2.0 4.0 6.0; 3.0 8.0 4.0; 5.0 10.0 11.0;;; 10.0 8.0 8.0; 9.0 11.0 8.0; 3.0 3.0 6.0;;; 3.0 5.0 3.0; 6.0 2.0 5.0; 8.0 4.0 9.0;;;; 7.0 4.0 9.0; 2.0 2.0 2.0; 4.0 3.0 8.0;;; 5.0 5.0 2.0; 2.0 8.0 1.0; 10.0 8.0 2.0;;; 7.0 6.0 6.0; 6.0 5.0 4.0; 4.0 5.0 10.0;;;;; 8.0 4.0 2.0; 5.0 5.0 7.0; 8.0 4.0 4.0;;; 7.0 5.0 6.0; 4.0 11.0 6.0; 8.0 1.0 10.0;;; 11.0 7.0 9.0; 10.0 5.0 9.0; 1.0 2.0 5.0;;;; 6.0 10.0 5.0; 2.0 2.0 8.0; 3.0 8.0 3.0;;; 7.0 6.0 9.0; 6.0 6.0 3.0; 5.0 5.0 2.0;;; 3.0 6.0 1.0; 9.0 9.0 5.0; 10.0 8.0 2.0;;;; 7.0 2.0 3.0; 2.0 6.0 2.0; 9.0 5.0 5.0;;; 5.0 9.0 6.0; 8.0 2.0 3.0; 8.0 10.0 7.0;;; 5.0 10.0 1.0; 3.0 2.0 10.0; 6.0 6.0 11.0;;;;;; 9.0 3.0 4.0; 10.0 2.0 2.0; 4.0 1.0 4.0;;; 5.0 1.0 7.0; 6.0 7.0 6.0; 6.0 8.0 10.0;;; 9.0 9.0 10.0; 3.0 8.0 5.0; 6.0 1.0 7.0;;;; 5.0 7.0 1.0; 8.0 11.0 5.0; 4.0 8.0 7.0;;; 8.0 3.0 10.0; 5.0 6.0 8.0; 2.0 2.0 4.0;;; 5.0 8.0 9.0; 2.0 5.0 3.0; 4.0 1.0 10.0;;;; 9.0 10.0 7.0; 6.0 8.0 2.0; 7.0 1.0 8.0;;; 5.0 3.0 6.0; 9.0 3.0 8.0; 9.0 1.0 6.0;;; 5.0 7.0 6.0; 8.0 11.0 1.0; 10.0 7.0 2.0;;;;; 5.0 8.0 4.0; 8.0 4.0 6.0; 10.0 10.0 2.0;;; 8.0 2.0 6.0; 5.0 8.0 6.0; 3.0 10.0 3.0;;; 2.0 2.0 6.0; 5.0 2.0 10.0; 3.0 3.0 9.0;;;; 7.0 8.0 2.0; 7.0 10.0 2.0; 9.0 3.0 5.0;;; 11.0 1.0 10.0; 3.0 8.0 4.0; 1.0 6.0 5.0;;; 5.0 6.0 4.0; 10.0 11.0 2.0; 4.0 4.0 11.0;;;; 4.0 3.0 9.0; 3.0 11.0 10.0; 1.0 2.0 11.0;;; 6.0 6.0 5.0; 6.0 11.0 2.0; 10.0 9.0 7.0;;; 3.0 1.0 10.0; 9.0 6.0 2.0; 7.0 8.0 8.0;;;;; 5.0 3.0 9.0; 4.0 10.0 7.0; 9.0 3.0 2.0;;; 2.0 3.0 9.0; 5.0 5.0 2.0; 7.0 10.0 3.0;;; 9.0 10.0 8.0; 3.0 4.0 8.0; 8.0 4.0 10.0;;;; 10.0 9.0 8.0; 4.0 7.0 9.0; 2.0 8.0 9.0;;; 10.0 1.0 9.0; 1.0 9.0 6.0; 6.0 2.0 7.0;;; 5.0 6.0 6.0; 5.0 8.0 3.0; 7.0 7.0 11.0;;;; 7.0 5.0 7.0; 6.0 11.0 7.0; 5.0 2.0 3.0;;; 8.0 5.0 4.0; 9.0 8.0 9.0; 8.0 9.0 2.0;;; 10.0 5.0 2.0; 4.0 6.0 2.0; 9.0 6.0 7.0;;;;;;; 6.0 5.0 6.0; 5.0 4.0 6.0; 3.0 6.0 10.0;;; 9.0 7.0 9.0; 9.0 5.0 6.0; 6.0 1.0 5.0;;; 8.0 6.0 2.0; 4.0 11.0 9.0; 8.0 2.0 9.0;;;; 7.0 5.0 6.0; 2.0 2.0 4.0; 1.0 6.0 4.0;;; 2.0 2.0 9.0; 6.0 10.0 9.0; 4.0 7.0 11.0;;; 8.0 7.0 5.0; 10.0 8.0 10.0; 6.0 10.0 6.0;;;; 10.0 10.0 2.0; 2.0 5.0 6.0; 10.0 4.0 5.0;;; 6.0 10.0 8.0; 5.0 7.0 9.0; 8.0 4.0 10.0;;; 10.0 6.0 7.0; 3.0 2.0 1.0; 7.0 10.0 10.0;;;;; 11.0 9.0 7.0; 4.0 7.0 9.0; 1.0 1.0 8.0;;; 5.0 7.0 9.0; 10.0 4.0 10.0; 1.0 2.0 10.0;;; 11.0 5.0 5.0; 8.0 5.0 5.0; 5.0 5.0 5.0;;;; 8.0 3.0 9.0; 1.0 11.0 7.0; 7.0 9.0 2.0;;; 9.0 1.0 1.0; 7.0 10.0 2.0; 3.0 7.0 5.0;;; 10.0 10.0 4.0; 7.0 8.0 1.0; 1.0 5.0 6.0;;;; 8.0 4.0 5.0; 4.0 3.0 2.0; 9.0 8.0 2.0;;; 6.0 1.0 8.0; 2.0 8.0 7.0; 7.0 9.0 4.0;;; 3.0 10.0 5.0; 10.0 10.0 9.0; 3.0 4.0 2.0;;;;; 11.0 2.0 3.0; 1.0 6.0 6.0; 7.0 8.0 7.0;;; 6.0 1.0 5.0; 3.0 11.0 6.0; 9.0 6.0 3.0;;; 11.0 2.0 9.0; 8.0 8.0 8.0; 7.0 1.0 10.0;;;; 3.0 4.0 10.0; 9.0 6.0 2.0; 6.0 3.0 2.0;;; 9.0 4.0 10.0; 1.0 2.0 3.0; 4.0 5.0 11.0;;; 4.0 7.0 3.0; 10.0 11.0 10.0; 5.0 10.0 9.0;;;; 8.0 7.0 10.0; 5.0 11.0 7.0; 5.0 10.0 5.0;;; 6.0 10.0 2.0; 4.0 2.0 6.0; 4.0 2.0 2.0;;; 9.0 10.0 5.0; 7.0 10.0 6.0; 5.0 9.0 6.0;;;;;; 8.0 4.0 4.0; 1.0 11.0 6.0; 7.0 10.0 7.0;;; 6.0 4.0 7.0; 8.0 10.0 1.0; 7.0 3.0 3.0;;; 11.0 7.0 8.0; 8.0 11.0 10.0; 7.0 9.0 10.0;;;; 4.0 10.0 6.0; 10.0 10.0 7.0; 3.0 9.0 5.0;;; 9.0 8.0 5.0; 8.0 10.0 1.0; 2.0 3.0 11.0;;; 11.0 3.0 3.0; 9.0 8.0 4.0; 4.0 9.0 5.0;;;; 11.0 1.0 6.0; 1.0 5.0 6.0; 6.0 9.0 7.0;;; 4.0 6.0 3.0; 2.0 6.0 2.0; 7.0 3.0 3.0;;; 2.0 4.0 5.0; 9.0 2.0 2.0; 6.0 8.0 5.0;;;;; 7.0 4.0 5.0; 3.0 7.0 9.0; 2.0 10.0 5.0;;; 11.0 6.0 8.0; 3.0 10.0 10.0; 10.0 8.0 10.0;;; 11.0 9.0 7.0; 3.0 7.0 1.0; 1.0 3.0 3.0;;;; 2.0 1.0 10.0; 1.0 9.0 9.0; 1.0 4.0 6.0;;; 10.0 1.0 5.0; 10.0 3.0 2.0; 6.0 9.0 3.0;;; 4.0 6.0 2.0; 2.0 3.0 4.0; 8.0 5.0 3.0;;;; 11.0 9.0 8.0; 4.0 2.0 9.0; 9.0 2.0 7.0;;; 10.0 8.0 8.0; 4.0 6.0 1.0; 1.0 2.0 4.0;;; 5.0 2.0 5.0; 4.0 2.0 5.0; 5.0 3.0 2.0;;;;; 3.0 3.0 10.0; 4.0 2.0 10.0; 3.0 3.0 4.0;;; 6.0 6.0 9.0; 7.0 4.0 5.0; 9.0 2.0 7.0;;; 2.0 7.0 6.0; 3.0 4.0 3.0; 1.0 3.0 9.0;;;; 8.0 2.0 7.0; 9.0 10.0 3.0; 2.0 10.0 10.0;;; 11.0 8.0 10.0; 7.0 5.0 1.0; 9.0 3.0 9.0;;; 4.0 8.0 10.0; 1.0 9.0 1.0; 9.0 5.0 7.0;;;; 8.0 3.0 1.0; 5.0 6.0 9.0; 1.0 4.0 6.0;;; 6.0 8.0 5.0; 5.0 10.0 4.0; 2.0 2.0 10.0;;; 10.0 8.0 2.0; 1.0 9.0 10.0; 2.0 10.0 3.0;;;;;; 3.0 7.0 5.0; 9.0 3.0 6.0; 8.0 5.0 11.0;;; 3.0 2.0 10.0; 10.0 11.0 8.0; 1.0 5.0 3.0;;; 6.0 10.0 8.0; 8.0 8.0 9.0; 5.0 8.0 5.0;;;; 6.0 6.0 2.0; 7.0 5.0 2.0; 5.0 7.0 4.0;;; 3.0 9.0 8.0; 9.0 2.0 3.0; 9.0 4.0 5.0;;; 6.0 1.0 2.0; 9.0 4.0 7.0; 7.0 9.0 9.0;;;; 8.0 9.0 8.0; 8.0 7.0 9.0; 7.0 7.0 4.0;;; 3.0 2.0 1.0; 9.0 11.0 5.0; 6.0 3.0 3.0;;; 11.0 2.0 7.0; 2.0 3.0 7.0; 8.0 6.0 9.0;;;;; 6.0 5.0 2.0; 8.0 9.0 6.0; 9.0 4.0 5.0;;; 6.0 2.0 9.0; 3.0 11.0 2.0; 3.0 8.0 4.0;;; 7.0 3.0 6.0; 7.0 2.0 1.0; 3.0 1.0 9.0;;;; 9.0 5.0 6.0; 10.0 9.0 10.0; 2.0 4.0 3.0;;; 7.0 7.0 10.0; 9.0 4.0 8.0; 8.0 3.0 2.0;;; 6.0 10.0 6.0; 6.0 6.0 8.0; 6.0 4.0 8.0;;;; 7.0 4.0 4.0; 5.0 11.0 8.0; 9.0 1.0 11.0;;; 7.0 5.0 7.0; 1.0 5.0 8.0; 7.0 9.0 9.0;;; 7.0 3.0 1.0; 6.0 2.0 5.0; 10.0 1.0 10.0;;;;; 5.0 6.0 5.0; 3.0 6.0 10.0; 7.0 3.0 8.0;;; 5.0 5.0 6.0; 4.0 5.0 1.0; 10.0 1.0 8.0;;; 4.0 4.0 8.0; 10.0 10.0 3.0; 5.0 7.0 6.0;;;; 10.0 1.0 3.0; 10.0 7.0 10.0; 6.0 8.0 7.0;;; 2.0 7.0 9.0; 3.0 11.0 3.0; 5.0 3.0 5.0;;; 7.0 1.0 3.0; 2.0 9.0 4.0; 7.0 3.0 4.0;;;; 2.0 4.0 10.0; 1.0 8.0 6.0; 1.0 2.0 10.0;;; 7.0 2.0 10.0; 8.0 2.0 9.0; 2.0 1.0 9.0;;; 7.0 6.0 3.0; 5.0 8.0 4.0; 9.0 9.0 5.0;;;;;;; 9.0 1.0 1.0; 3.0 4.0 7.0; 4.0 5.0 10.0;;; 10.0 9.0 8.0; 3.0 9.0 2.0; 5.0 3.0 4.0;;; 10.0 7.0 5.0; 10.0 4.0 7.0; 10.0 4.0 11.0;;;; 3.0 8.0 4.0; 8.0 7.0 10.0; 2.0 6.0 4.0;;; 11.0 1.0 3.0; 4.0 3.0 5.0; 7.0 5.0 3.0;;; 10.0 8.0 5.0; 8.0 8.0 10.0; 8.0 7.0 9.0;;;; 11.0 3.0 10.0; 8.0 9.0 3.0; 1.0 4.0 9.0;;; 3.0 9.0 4.0; 3.0 6.0 3.0; 10.0 5.0 11.0;;; 10.0 9.0 1.0; 8.0 7.0 10.0; 9.0 2.0 10.0;;;;; 7.0 4.0 6.0; 3.0 11.0 4.0; 10.0 9.0 10.0;;; 4.0 10.0 10.0; 2.0 11.0 6.0; 10.0 8.0 6.0;;; 6.0 4.0 4.0; 1.0 10.0 1.0; 1.0 8.0 11.0;;;; 9.0 10.0 9.0; 6.0 7.0 8.0; 6.0 3.0 8.0;;; 6.0 7.0 7.0; 10.0 11.0 4.0; 1.0 7.0 7.0;;; 2.0 6.0 3.0; 3.0 5.0 6.0; 2.0 2.0 11.0;;;; 4.0 7.0 5.0; 2.0 11.0 1.0; 8.0 5.0 3.0;;; 4.0 10.0 4.0; 9.0 3.0 8.0; 4.0 8.0 4.0;;; 3.0 2.0 1.0; 7.0 3.0 4.0; 3.0 8.0 9.0;;;;; 3.0 5.0 7.0; 4.0 8.0 4.0; 10.0 10.0 8.0;;; 6.0 5.0 1.0; 1.0 3.0 4.0; 1.0 8.0 2.0;;; 9.0 1.0 7.0; 5.0 7.0 2.0; 4.0 1.0 9.0;;;; 4.0 4.0 7.0; 7.0 4.0 7.0; 8.0 10.0 3.0;;; 3.0 3.0 9.0; 1.0 3.0 6.0; 1.0 7.0 11.0;;; 6.0 8.0 8.0; 7.0 11.0 7.0; 8.0 10.0 10.0;;;; 8.0 1.0 7.0; 5.0 3.0 10.0; 7.0 9.0 9.0;;; 3.0 2.0 4.0; 1.0 7.0 8.0; 10.0 2.0 10.0;;; 6.0 5.0 10.0; 10.0 10.0 6.0; 4.0 4.0 5.0;;;;;; 8.0 1.0 9.0; 4.0 3.0 5.0; 4.0 10.0 6.0;;; 11.0 4.0 5.0; 10.0 6.0 8.0; 1.0 10.0 2.0;;; 2.0 1.0 1.0; 10.0 8.0 10.0; 6.0 7.0 8.0;;;; 7.0 1.0 5.0; 9.0 4.0 2.0; 7.0 3.0 5.0;;; 8.0 4.0 1.0; 2.0 9.0 2.0; 9.0 9.0 9.0;;; 3.0 1.0 5.0; 4.0 5.0 1.0; 9.0 9.0 2.0;;;; 5.0 10.0 2.0; 9.0 7.0 1.0; 5.0 8.0 10.0;;; 2.0 2.0 6.0; 4.0 11.0 5.0; 10.0 1.0 5.0;;; 8.0 1.0 6.0; 8.0 6.0 8.0; 2.0 7.0 7.0;;;;; 10.0 7.0 10.0; 5.0 7.0 6.0; 4.0 7.0 11.0;;; 5.0 7.0 2.0; 1.0 5.0 8.0; 3.0 6.0 10.0;;; 6.0 2.0 8.0; 10.0 6.0 2.0; 8.0 6.0 10.0;;;; 7.0 2.0 7.0; 2.0 11.0 3.0; 8.0 1.0 11.0;;; 3.0 7.0 4.0; 1.0 5.0 3.0; 6.0 2.0 4.0;;; 3.0 10.0 3.0; 7.0 3.0 8.0; 2.0 2.0 8.0;;;; 2.0 2.0 5.0; 5.0 9.0 7.0; 7.0 4.0 5.0;;; 9.0 2.0 8.0; 10.0 6.0 4.0; 2.0 6.0 4.0;;; 5.0 7.0 2.0; 2.0 4.0 6.0; 5.0 1.0 10.0;;;;; 2.0 3.0 4.0; 8.0 3.0 10.0; 9.0 1.0 6.0;;; 9.0 5.0 1.0; 9.0 3.0 3.0; 1.0 1.0 7.0;;; 7.0 10.0 3.0; 2.0 6.0 9.0; 8.0 8.0 6.0;;;; 9.0 2.0 3.0; 10.0 10.0 10.0; 3.0 5.0 2.0;;; 11.0 6.0 2.0; 2.0 3.0 3.0; 5.0 6.0 4.0;;; 8.0 8.0 9.0; 7.0 10.0 4.0; 2.0 1.0 10.0;;;; 8.0 6.0 8.0; 7.0 9.0 2.0; 9.0 2.0 4.0;;; 3.0 4.0 9.0; 7.0 3.0 2.0; 10.0 4.0 6.0;;; 4.0 3.0 3.0; 10.0 2.0 4.0; 8.0 1.0 10.0;;;;;; 5.0 4.0 5.0; 4.0 9.0 4.0; 7.0 5.0 7.0;;; 9.0 10.0 6.0; 3.0 11.0 3.0; 3.0 10.0 3.0;;; 8.0 1.0 9.0; 10.0 8.0 1.0; 8.0 9.0 7.0;;;; 7.0 3.0 4.0; 6.0 8.0 4.0; 7.0 9.0 2.0;;; 7.0 10.0 5.0; 1.0 2.0 8.0; 7.0 5.0 10.0;;; 3.0 1.0 3.0; 9.0 8.0 6.0; 7.0 9.0 11.0;;;; 7.0 6.0 8.0; 9.0 10.0 9.0; 1.0 6.0 4.0;;; 7.0 5.0 9.0; 9.0 10.0 3.0; 5.0 7.0 9.0;;; 2.0 9.0 1.0; 1.0 3.0 10.0; 10.0 2.0 11.0;;;;; 3.0 5.0 4.0; 8.0 2.0 5.0; 4.0 6.0 9.0;;; 4.0 1.0 2.0; 9.0 7.0 1.0; 8.0 1.0 11.0;;; 5.0 2.0 8.0; 1.0 11.0 2.0; 2.0 8.0 9.0;;;; 7.0 3.0 1.0; 9.0 11.0 2.0; 5.0 8.0 7.0;;; 2.0 2.0 10.0; 2.0 10.0 4.0; 7.0 10.0 5.0;;; 8.0 10.0 10.0; 3.0 2.0 5.0; 8.0 8.0 9.0;;;; 10.0 5.0 2.0; 6.0 4.0 4.0; 9.0 4.0 3.0;;; 9.0 1.0 8.0; 4.0 9.0 10.0; 5.0 2.0 7.0;;; 10.0 3.0 5.0; 9.0 9.0 4.0; 10.0 1.0 2.0;;;;; 2.0 1.0 3.0; 3.0 9.0 10.0; 8.0 3.0 3.0;;; 4.0 10.0 2.0; 5.0 9.0 1.0; 7.0 6.0 5.0;;; 8.0 10.0 9.0; 10.0 3.0 6.0; 3.0 6.0 11.0;;;; 11.0 6.0 4.0; 3.0 11.0 8.0; 8.0 6.0 3.0;;; 6.0 8.0 4.0; 10.0 7.0 5.0; 10.0 6.0 9.0;;; 6.0 9.0 9.0; 7.0 6.0 2.0; 2.0 7.0 10.0;;;; 6.0 1.0 2.0; 9.0 10.0 10.0; 9.0 7.0 2.0;;; 2.0 4.0 3.0; 7.0 8.0 2.0; 9.0 2.0 10.0;;; 2.0 5.0 5.0; 8.0 7.0 5.0; 1.0 2.0 6.0;;;;;;;;
                            8.0 4.0 1.0; 4.0 7.0 5.0; 3.0 9.0 11.0;;; 9.0 3.0 4.0; 3.0 5.0 6.0; 9.0 5.0 7.0;;; 11.0 9.0 3.0; 6.0 11.0 7.0; 4.0 6.0 3.0;;;; 11.0 2.0 4.0; 7.0 6.0 6.0; 7.0 3.0 9.0;;; 6.0 6.0 4.0; 9.0 10.0 8.0; 6.0 7.0 10.0;;; 3.0 5.0 1.0; 9.0 8.0 5.0; 5.0 8.0 3.0;;;; 9.0 10.0 7.0; 1.0 10.0 2.0; 3.0 7.0 3.0;;; 11.0 3.0 8.0; 1.0 9.0 7.0; 9.0 8.0 5.0;;; 5.0 5.0 9.0; 3.0 6.0 1.0; 7.0 7.0 8.0;;;;; 10.0 7.0 3.0; 8.0 10.0 8.0; 9.0 5.0 2.0;;; 6.0 2.0 1.0; 6.0 5.0 3.0; 5.0 4.0 8.0;;; 10.0 8.0 10.0; 3.0 2.0 4.0; 1.0 10.0 10.0;;;; 11.0 1.0 7.0; 7.0 11.0 8.0; 10.0 6.0 9.0;;; 4.0 10.0 3.0; 7.0 11.0 6.0; 7.0 8.0 10.0;;; 10.0 1.0 6.0; 6.0 8.0 1.0; 1.0 3.0 10.0;;;; 11.0 10.0 5.0; 8.0 6.0 9.0; 7.0 1.0 2.0;;; 5.0 7.0 1.0; 2.0 11.0 8.0; 9.0 6.0 9.0;;; 8.0 1.0 1.0; 9.0 2.0 5.0; 8.0 2.0 5.0;;;;; 3.0 2.0 8.0; 9.0 2.0 6.0; 2.0 9.0 7.0;;; 7.0 2.0 5.0; 10.0 9.0 6.0; 8.0 4.0 5.0;;; 3.0 4.0 4.0; 2.0 11.0 1.0; 3.0 4.0 9.0;;;; 6.0 10.0 1.0; 7.0 7.0 6.0; 5.0 1.0 9.0;;; 9.0 1.0 4.0; 6.0 4.0 9.0; 6.0 6.0 2.0;;; 11.0 1.0 8.0; 2.0 3.0 7.0; 7.0 10.0 11.0;;;; 4.0 7.0 5.0; 6.0 10.0 5.0; 10.0 5.0 2.0;;; 7.0 8.0 8.0; 3.0 4.0 7.0; 6.0 9.0 6.0;;; 11.0 8.0 10.0; 6.0 5.0 2.0; 3.0 3.0 4.0;;;;;; 9.0 3.0 10.0; 10.0 5.0 2.0; 3.0 3.0 11.0;;; 9.0 1.0 2.0; 8.0 11.0 9.0; 6.0 3.0 7.0;;; 2.0 8.0 9.0; 2.0 9.0 7.0; 2.0 6.0 2.0;;;; 7.0 3.0 1.0; 5.0 5.0 1.0; 1.0 2.0 6.0;;; 5.0 8.0 8.0; 9.0 5.0 5.0; 9.0 2.0 7.0;;; 7.0 10.0 8.0; 1.0 11.0 3.0; 8.0 7.0 2.0;;;; 9.0 10.0 1.0; 10.0 11.0 3.0; 1.0 10.0 3.0;;; 9.0 9.0 4.0; 10.0 3.0 2.0; 7.0 6.0 2.0;;; 11.0 9.0 1.0; 5.0 7.0 4.0; 3.0 1.0 8.0;;;;; 7.0 2.0 7.0; 4.0 8.0 10.0; 9.0 4.0 3.0;;; 4.0 4.0 3.0; 3.0 5.0 4.0; 6.0 1.0 2.0;;; 5.0 5.0 4.0; 3.0 2.0 1.0; 9.0 2.0 4.0;;;; 3.0 5.0 5.0; 5.0 2.0 10.0; 1.0 7.0 11.0;;; 5.0 2.0 7.0; 8.0 8.0 1.0; 2.0 7.0 11.0;;; 10.0 8.0 10.0; 10.0 10.0 1.0; 8.0 1.0 8.0;;;; 3.0 1.0 5.0; 6.0 11.0 2.0; 3.0 4.0 3.0;;; 4.0 8.0 4.0; 5.0 6.0 3.0; 4.0 4.0 2.0;;; 10.0 10.0 8.0; 5.0 5.0 9.0; 3.0 10.0 2.0;;;;; 11.0 5.0 1.0; 2.0 6.0 10.0; 2.0 4.0 9.0;;; 10.0 1.0 2.0; 4.0 2.0 4.0; 7.0 1.0 9.0;;; 8.0 7.0 9.0; 3.0 10.0 2.0; 2.0 6.0 7.0;;;; 3.0 8.0 3.0; 2.0 8.0 7.0; 1.0 2.0 7.0;;; 2.0 5.0 5.0; 2.0 9.0 3.0; 6.0 9.0 7.0;;; 2.0 5.0 6.0; 1.0 3.0 8.0; 2.0 1.0 6.0;;;; 10.0 7.0 4.0; 10.0 9.0 1.0; 1.0 7.0 4.0;;; 8.0 5.0 8.0; 9.0 10.0 3.0; 7.0 9.0 4.0;;; 7.0 4.0 6.0; 6.0 7.0 1.0; 7.0 6.0 6.0;;;;;; 11.0 4.0 6.0; 9.0 8.0 4.0; 6.0 8.0 10.0;;; 7.0 10.0 10.0; 9.0 7.0 7.0; 9.0 10.0 4.0;;; 10.0 2.0 5.0; 8.0 3.0 7.0; 4.0 2.0 6.0;;;; 11.0 1.0 9.0; 6.0 3.0 5.0; 5.0 10.0 2.0;;; 8.0 10.0 1.0; 9.0 8.0 9.0; 8.0 8.0 3.0;;; 2.0 3.0 6.0; 4.0 2.0 4.0; 7.0 5.0 10.0;;;; 9.0 4.0 6.0; 7.0 2.0 6.0; 5.0 10.0 3.0;;; 11.0 6.0 4.0; 4.0 5.0 8.0; 9.0 1.0 2.0;;; 5.0 1.0 4.0; 5.0 11.0 4.0; 2.0 9.0 10.0;;;;; 7.0 3.0 1.0; 8.0 6.0 8.0; 6.0 9.0 5.0;;; 11.0 5.0 4.0; 4.0 10.0 2.0; 5.0 10.0 10.0;;; 10.0 4.0 6.0; 7.0 9.0 8.0; 8.0 7.0 8.0;;;; 8.0 8.0 5.0; 4.0 6.0 1.0; 3.0 6.0 10.0;;; 10.0 7.0 1.0; 5.0 5.0 7.0; 10.0 9.0 8.0;;; 11.0 3.0 4.0; 7.0 5.0 7.0; 5.0 2.0 2.0;;;; 4.0 2.0 6.0; 2.0 4.0 6.0; 7.0 2.0 2.0;;; 2.0 3.0 10.0; 1.0 5.0 3.0; 1.0 6.0 7.0;;; 9.0 4.0 8.0; 6.0 7.0 1.0; 1.0 1.0 7.0;;;;; 7.0 10.0 2.0; 7.0 6.0 1.0; 4.0 1.0 7.0;;; 8.0 5.0 9.0; 8.0 10.0 3.0; 3.0 4.0 5.0;;; 10.0 7.0 5.0; 3.0 4.0 1.0; 1.0 3.0 8.0;;;; 6.0 5.0 6.0; 10.0 9.0 5.0; 3.0 9.0 4.0;;; 8.0 2.0 10.0; 2.0 9.0 7.0; 4.0 8.0 3.0;;; 7.0 8.0 8.0; 8.0 10.0 6.0; 4.0 1.0 9.0;;;; 7.0 7.0 8.0; 6.0 8.0 3.0; 1.0 6.0 4.0;;; 8.0 4.0 10.0; 6.0 9.0 8.0; 8.0 10.0 5.0;;; 8.0 2.0 2.0; 2.0 9.0 9.0; 2.0 4.0 11.0;;;;;;; 10.0 10.0 7.0; 10.0 5.0 4.0; 7.0 1.0 2.0;;; 9.0 3.0 5.0; 10.0 2.0 2.0; 5.0 3.0 9.0;;; 8.0 5.0 8.0; 7.0 4.0 5.0; 10.0 5.0 11.0;;;; 4.0 4.0 6.0; 8.0 6.0 2.0; 3.0 3.0 8.0;;; 4.0 3.0 10.0; 5.0 2.0 10.0; 3.0 10.0 3.0;;; 4.0 1.0 3.0; 5.0 9.0 4.0; 10.0 4.0 2.0;;;; 6.0 1.0 1.0; 1.0 8.0 3.0; 5.0 9.0 5.0;;; 11.0 8.0 5.0; 2.0 2.0 6.0; 2.0 9.0 8.0;;; 11.0 1.0 1.0; 7.0 10.0 4.0; 3.0 1.0 10.0;;;;; 8.0 10.0 7.0; 5.0 7.0 5.0; 5.0 4.0 7.0;;; 2.0 1.0 8.0; 9.0 9.0 10.0; 7.0 3.0 10.0;;; 6.0 1.0 10.0; 1.0 4.0 2.0; 9.0 10.0 8.0;;;; 4.0 10.0 7.0; 1.0 6.0 1.0; 8.0 3.0 11.0;;; 11.0 8.0 4.0; 10.0 2.0 8.0; 2.0 1.0 3.0;;; 8.0 9.0 6.0; 9.0 5.0 5.0; 10.0 6.0 3.0;;;; 9.0 3.0 2.0; 7.0 2.0 3.0; 10.0 5.0 2.0;;; 5.0 10.0 2.0; 8.0 2.0 9.0; 7.0 3.0 9.0;;; 4.0 5.0 6.0; 7.0 7.0 7.0; 1.0 7.0 4.0;;;;; 6.0 9.0 3.0; 8.0 4.0 2.0; 4.0 8.0 4.0;;; 7.0 1.0 9.0; 5.0 9.0 6.0; 8.0 8.0 6.0;;; 3.0 4.0 1.0; 10.0 3.0 8.0; 5.0 6.0 7.0;;;; 4.0 2.0 1.0; 1.0 8.0 2.0; 5.0 3.0 4.0;;; 7.0 2.0 6.0; 2.0 9.0 2.0; 3.0 6.0 2.0;;; 9.0 4.0 10.0; 2.0 10.0 7.0; 2.0 6.0 2.0;;;; 9.0 8.0 8.0; 5.0 7.0 9.0; 6.0 4.0 9.0;;; 7.0 2.0 6.0; 6.0 8.0 6.0; 2.0 10.0 11.0;;; 4.0 3.0 9.0; 6.0 2.0 5.0; 3.0 9.0 9.0;;;;;; 10.0 1.0 1.0; 4.0 6.0 8.0; 6.0 8.0 4.0;;; 2.0 3.0 8.0; 1.0 9.0 5.0; 9.0 4.0 2.0;;; 4.0 10.0 9.0; 8.0 3.0 3.0; 6.0 6.0 2.0;;;; 2.0 2.0 6.0; 10.0 4.0 9.0; 5.0 9.0 3.0;;; 9.0 5.0 6.0; 4.0 11.0 3.0; 1.0 10.0 8.0;;; 9.0 10.0 10.0; 1.0 4.0 7.0; 6.0 7.0 8.0;;;; 4.0 7.0 2.0; 7.0 7.0 4.0; 3.0 5.0 9.0;;; 8.0 7.0 10.0; 2.0 6.0 2.0; 7.0 9.0 10.0;;; 5.0 7.0 9.0; 8.0 11.0 3.0; 7.0 4.0 11.0;;;;; 5.0 1.0 5.0; 5.0 8.0 10.0; 5.0 5.0 4.0;;; 7.0 10.0 3.0; 10.0 5.0 7.0; 2.0 3.0 7.0;;; 4.0 10.0 8.0; 8.0 9.0 8.0; 7.0 3.0 10.0;;;; 9.0 7.0 3.0; 6.0 9.0 6.0; 7.0 2.0 6.0;;; 11.0 5.0 3.0; 1.0 2.0 1.0; 9.0 3.0 9.0;;; 10.0 5.0 4.0; 7.0 7.0 4.0; 9.0 10.0 7.0;;;; 2.0 1.0 2.0; 6.0 9.0 3.0; 6.0 7.0 8.0;;; 11.0 6.0 7.0; 10.0 5.0 7.0; 1.0 8.0 5.0;;; 2.0 10.0 10.0; 10.0 10.0 5.0; 7.0 9.0 10.0;;;;; 2.0 9.0 3.0; 4.0 9.0 10.0; 5.0 1.0 5.0;;; 9.0 4.0 7.0; 1.0 2.0 2.0; 10.0 9.0 3.0;;; 9.0 10.0 7.0; 8.0 5.0 7.0; 7.0 10.0 3.0;;;; 4.0 4.0 7.0; 10.0 10.0 4.0; 10.0 10.0 4.0;;; 9.0 8.0 2.0; 4.0 10.0 5.0; 5.0 10.0 11.0;;; 2.0 8.0 6.0; 6.0 7.0 5.0; 5.0 2.0 11.0;;;; 5.0 8.0 2.0; 7.0 2.0 5.0; 3.0 8.0 4.0;;; 11.0 9.0 1.0; 1.0 9.0 7.0; 9.0 2.0 2.0;;; 2.0 4.0 4.0; 7.0 9.0 10.0; 2.0 4.0 8.0;;;;;; 2.0 8.0 4.0; 2.0 6.0 9.0; 2.0 6.0 3.0;;; 4.0 9.0 3.0; 3.0 10.0 5.0; 5.0 9.0 2.0;;; 5.0 2.0 4.0; 1.0 9.0 10.0; 10.0 4.0 7.0;;;; 8.0 3.0 1.0; 9.0 6.0 3.0; 6.0 1.0 7.0;;; 9.0 6.0 7.0; 7.0 11.0 6.0; 6.0 5.0 5.0;;; 5.0 2.0 8.0; 1.0 5.0 7.0; 8.0 1.0 11.0;;;; 9.0 5.0 9.0; 4.0 4.0 5.0; 8.0 6.0 8.0;;; 5.0 1.0 2.0; 9.0 11.0 7.0; 5.0 5.0 11.0;;; 6.0 7.0 7.0; 3.0 11.0 5.0; 3.0 3.0 6.0;;;;; 8.0 2.0 5.0; 5.0 7.0 3.0; 10.0 6.0 3.0;;; 6.0 10.0 1.0; 5.0 3.0 3.0; 3.0 2.0 9.0;;; 2.0 6.0 1.0; 9.0 8.0 5.0; 5.0 10.0 2.0;;;; 8.0 2.0 8.0; 8.0 11.0 10.0; 8.0 1.0 8.0;;; 7.0 2.0 2.0; 6.0 9.0 5.0; 2.0 5.0 7.0;;; 5.0 1.0 7.0; 1.0 7.0 4.0; 8.0 7.0 11.0;;;; 10.0 3.0 10.0; 5.0 4.0 3.0; 10.0 6.0 4.0;;; 4.0 6.0 4.0; 3.0 5.0 1.0; 4.0 1.0 2.0;;; 2.0 6.0 6.0; 6.0 5.0 5.0; 9.0 9.0 10.0;;;;; 10.0 2.0 3.0; 3.0 3.0 3.0; 3.0 10.0 5.0;;; 11.0 10.0 7.0; 10.0 10.0 2.0; 7.0 2.0 9.0;;; 5.0 3.0 6.0; 2.0 11.0 6.0; 2.0 1.0 10.0;;;; 8.0 1.0 8.0; 5.0 4.0 3.0; 4.0 3.0 2.0;;; 5.0 5.0 7.0; 3.0 2.0 2.0; 7.0 6.0 3.0;;; 4.0 6.0 8.0; 10.0 2.0 5.0; 8.0 6.0 8.0;;;; 9.0 9.0 6.0; 6.0 6.0 1.0; 6.0 4.0 6.0;;; 11.0 9.0 7.0; 2.0 4.0 5.0; 1.0 6.0 8.0;;; 7.0 1.0 3.0; 1.0 6.0 7.0; 1.0 2.0 4.0;;;;;;; 10.0 6.0 6.0; 7.0 2.0 8.0; 1.0 9.0 4.0;;; 9.0 2.0 8.0; 10.0 3.0 10.0; 7.0 9.0 6.0;;; 3.0 9.0 5.0; 8.0 4.0 9.0; 7.0 1.0 2.0;;;; 2.0 8.0 5.0; 6.0 11.0 1.0; 3.0 4.0 9.0;;; 3.0 1.0 6.0; 4.0 5.0 2.0; 9.0 8.0 8.0;;; 5.0 2.0 6.0; 10.0 8.0 10.0; 4.0 8.0 8.0;;;; 4.0 10.0 7.0; 5.0 5.0 2.0; 1.0 8.0 2.0;;; 8.0 2.0 8.0; 5.0 4.0 10.0; 10.0 5.0 5.0;;; 11.0 4.0 9.0; 8.0 2.0 3.0; 1.0 5.0 8.0;;;;; 7.0 8.0 4.0; 10.0 11.0 5.0; 8.0 10.0 5.0;;; 4.0 7.0 9.0; 5.0 6.0 3.0; 4.0 8.0 2.0;;; 2.0 3.0 8.0; 3.0 6.0 5.0; 3.0 9.0 8.0;;;; 8.0 7.0 6.0; 3.0 2.0 7.0; 9.0 5.0 3.0;;; 4.0 4.0 3.0; 10.0 4.0 1.0; 1.0 2.0 2.0;;; 4.0 3.0 3.0; 8.0 10.0 2.0; 6.0 8.0 10.0;;;; 5.0 2.0 4.0; 3.0 5.0 10.0; 7.0 4.0 3.0;;; 8.0 4.0 4.0; 10.0 2.0 8.0; 10.0 10.0 2.0;;; 11.0 4.0 5.0; 8.0 11.0 7.0; 3.0 2.0 8.0;;;;; 10.0 1.0 4.0; 6.0 7.0 8.0; 10.0 1.0 7.0;;; 10.0 10.0 1.0; 10.0 11.0 10.0; 6.0 5.0 10.0;;; 11.0 5.0 1.0; 9.0 11.0 5.0; 1.0 1.0 4.0;;;; 9.0 6.0 9.0; 10.0 4.0 1.0; 5.0 8.0 9.0;;; 11.0 6.0 8.0; 5.0 11.0 9.0; 1.0 7.0 8.0;;; 8.0 6.0 4.0; 6.0 6.0 3.0; 3.0 7.0 8.0;;;; 5.0 3.0 9.0; 5.0 9.0 8.0; 1.0 6.0 11.0;;; 4.0 3.0 5.0; 8.0 11.0 4.0; 7.0 9.0 6.0;;; 3.0 2.0 3.0; 3.0 10.0 4.0; 10.0 2.0 7.0;;;;;; 7.0 1.0 7.0; 2.0 9.0 10.0; 5.0 4.0 10.0;;; 6.0 1.0 10.0; 7.0 4.0 10.0; 9.0 4.0 8.0;;; 11.0 8.0 10.0; 9.0 9.0 5.0; 6.0 4.0 9.0;;;; 6.0 6.0 7.0; 7.0 11.0 8.0; 8.0 7.0 3.0;;; 8.0 10.0 1.0; 5.0 8.0 4.0; 8.0 5.0 3.0;;; 7.0 7.0 10.0; 10.0 10.0 5.0; 3.0 10.0 8.0;;;; 10.0 6.0 6.0; 10.0 4.0 5.0; 6.0 2.0 10.0;;; 4.0 4.0 3.0; 6.0 8.0 4.0; 10.0 9.0 5.0;;; 10.0 6.0 10.0; 9.0 2.0 7.0; 4.0 8.0 3.0;;;;; 6.0 5.0 10.0; 10.0 4.0 5.0; 1.0 10.0 3.0;;; 3.0 9.0 6.0; 2.0 9.0 2.0; 4.0 3.0 7.0;;; 3.0 1.0 7.0; 6.0 9.0 4.0; 1.0 8.0 8.0;;;; 11.0 6.0 6.0; 3.0 6.0 8.0; 5.0 9.0 8.0;;; 6.0 2.0 9.0; 5.0 3.0 9.0; 3.0 2.0 9.0;;; 3.0 3.0 4.0; 8.0 10.0 5.0; 9.0 8.0 10.0;;;; 9.0 2.0 5.0; 10.0 5.0 7.0; 5.0 6.0 11.0;;; 7.0 2.0 5.0; 1.0 7.0 4.0; 10.0 2.0 6.0;;; 11.0 10.0 3.0; 4.0 2.0 6.0; 4.0 5.0 5.0;;;;; 11.0 8.0 10.0; 2.0 7.0 2.0; 7.0 10.0 7.0;;; 4.0 4.0 3.0; 2.0 9.0 8.0; 8.0 2.0 8.0;;; 9.0 3.0 7.0; 3.0 6.0 3.0; 6.0 4.0 6.0;;;; 4.0 6.0 7.0; 1.0 2.0 1.0; 10.0 4.0 8.0;;; 7.0 9.0 6.0; 1.0 7.0 1.0; 5.0 5.0 5.0;;; 6.0 1.0 3.0; 7.0 4.0 1.0; 8.0 3.0 10.0;;;; 5.0 8.0 4.0; 4.0 9.0 5.0; 6.0 7.0 9.0;;; 4.0 7.0 4.0; 5.0 11.0 5.0; 4.0 7.0 4.0;;; 3.0 6.0 7.0; 6.0 4.0 9.0; 8.0 6.0 2.0;;;;;; 3.0 8.0 9.0; 7.0 11.0 9.0; 3.0 7.0 6.0;;; 10.0 1.0 3.0; 9.0 5.0 8.0; 9.0 4.0 11.0;;; 6.0 10.0 5.0; 9.0 9.0 4.0; 6.0 8.0 5.0;;;; 2.0 1.0 9.0; 6.0 11.0 5.0; 6.0 4.0 7.0;;; 8.0 4.0 7.0; 6.0 6.0 6.0; 2.0 8.0 8.0;;; 6.0 9.0 8.0; 2.0 9.0 3.0; 10.0 5.0 11.0;;;; 3.0 6.0 7.0; 9.0 7.0 7.0; 10.0 4.0 8.0;;; 11.0 4.0 4.0; 7.0 6.0 2.0; 8.0 10.0 6.0;;; 5.0 3.0 5.0; 1.0 4.0 2.0; 3.0 4.0 10.0;;;;; 10.0 7.0 9.0; 7.0 6.0 9.0; 5.0 6.0 9.0;;; 3.0 7.0 7.0; 10.0 11.0 4.0; 6.0 4.0 9.0;;; 11.0 4.0 2.0; 8.0 5.0 4.0; 2.0 5.0 9.0;;;; 4.0 4.0 1.0; 5.0 5.0 3.0; 10.0 8.0 3.0;;; 10.0 7.0 10.0; 9.0 10.0 2.0; 1.0 10.0 9.0;;; 5.0 7.0 10.0; 1.0 11.0 5.0; 5.0 9.0 3.0;;;; 4.0 4.0 9.0; 4.0 9.0 6.0; 9.0 6.0 7.0;;; 6.0 10.0 4.0; 9.0 8.0 2.0; 4.0 6.0 6.0;;; 6.0 1.0 9.0; 7.0 5.0 9.0; 10.0 7.0 9.0;;;;; 6.0 10.0 7.0; 1.0 7.0 10.0; 10.0 3.0 7.0;;; 5.0 9.0 3.0; 7.0 6.0 5.0; 9.0 9.0 8.0;;; 6.0 4.0 2.0; 10.0 6.0 9.0; 2.0 8.0 6.0;;;; 3.0 8.0 8.0; 5.0 3.0 7.0; 5.0 6.0 9.0;;; 4.0 9.0 7.0; 4.0 10.0 2.0; 5.0 9.0 3.0;;; 5.0 8.0 10.0; 10.0 7.0 8.0; 3.0 4.0 7.0;;;; 6.0 10.0 1.0; 9.0 11.0 2.0; 1.0 10.0 3.0;;; 9.0 6.0 9.0; 2.0 7.0 3.0; 9.0 10.0 5.0;;; 9.0 6.0 5.0; 8.0 9.0 10.0; 2.0 5.0 10.0;;;;;;;;
                            10.0 4.0 4.0; 10.0 10.0 6.0; 4.0 7.0 6.0;;; 8.0 8.0 4.0; 5.0 9.0 9.0; 5.0 10.0 11.0;;; 11.0 4.0 9.0; 6.0 8.0 9.0; 5.0 3.0 8.0;;;; 5.0 8.0 1.0; 6.0 11.0 10.0; 2.0 2.0 11.0;;; 9.0 7.0 3.0; 1.0 10.0 9.0; 2.0 6.0 5.0;;; 8.0 8.0 2.0; 6.0 7.0 1.0; 7.0 3.0 3.0;;;; 9.0 10.0 10.0; 8.0 3.0 1.0; 7.0 7.0 4.0;;; 2.0 2.0 6.0; 10.0 5.0 3.0; 8.0 4.0 9.0;;; 2.0 3.0 9.0; 1.0 8.0 1.0; 1.0 2.0 8.0;;;;; 10.0 6.0 7.0; 1.0 8.0 4.0; 8.0 10.0 3.0;;; 4.0 6.0 3.0; 4.0 5.0 8.0; 10.0 2.0 8.0;;; 8.0 8.0 4.0; 4.0 4.0 2.0; 10.0 4.0 11.0;;;; 3.0 6.0 4.0; 3.0 6.0 9.0; 4.0 5.0 8.0;;; 3.0 3.0 10.0; 8.0 8.0 2.0; 10.0 1.0 9.0;;; 4.0 6.0 1.0; 2.0 8.0 2.0; 8.0 5.0 8.0;;;; 4.0 9.0 6.0; 10.0 2.0 6.0; 10.0 9.0 4.0;;; 4.0 7.0 3.0; 6.0 10.0 2.0; 8.0 2.0 3.0;;; 4.0 6.0 1.0; 9.0 9.0 1.0; 4.0 1.0 6.0;;;;; 4.0 5.0 7.0; 5.0 11.0 5.0; 8.0 10.0 4.0;;; 3.0 9.0 7.0; 9.0 8.0 4.0; 5.0 3.0 6.0;;; 11.0 4.0 1.0; 10.0 10.0 5.0; 9.0 2.0 9.0;;;; 9.0 9.0 7.0; 10.0 5.0 10.0; 5.0 5.0 6.0;;; 4.0 5.0 10.0; 7.0 5.0 7.0; 4.0 9.0 10.0;;; 6.0 4.0 4.0; 9.0 11.0 4.0; 4.0 4.0 10.0;;;; 6.0 9.0 8.0; 7.0 2.0 7.0; 8.0 5.0 7.0;;; 9.0 8.0 4.0; 9.0 5.0 5.0; 6.0 9.0 10.0;;; 3.0 9.0 1.0; 5.0 4.0 8.0; 4.0 6.0 9.0;;;;;; 8.0 1.0 10.0; 5.0 6.0 3.0; 5.0 4.0 10.0;;; 7.0 3.0 7.0; 4.0 11.0 8.0; 4.0 6.0 6.0;;; 11.0 10.0 5.0; 5.0 6.0 1.0; 10.0 1.0 11.0;;;; 9.0 1.0 6.0; 8.0 11.0 6.0; 7.0 8.0 10.0;;; 10.0 3.0 9.0; 6.0 6.0 3.0; 4.0 4.0 6.0;;; 4.0 10.0 9.0; 1.0 5.0 1.0; 2.0 7.0 7.0;;;; 8.0 10.0 8.0; 1.0 2.0 2.0; 1.0 5.0 2.0;;; 5.0 10.0 5.0; 2.0 11.0 9.0; 4.0 1.0 5.0;;; 11.0 10.0 7.0; 7.0 9.0 1.0; 10.0 6.0 10.0;;;;; 2.0 7.0 4.0; 10.0 11.0 5.0; 4.0 6.0 5.0;;; 4.0 5.0 9.0; 2.0 6.0 5.0; 1.0 8.0 6.0;;; 11.0 2.0 2.0; 4.0 2.0 10.0; 10.0 3.0 11.0;;;; 10.0 3.0 5.0; 4.0 6.0 1.0; 4.0 6.0 6.0;;; 10.0 1.0 3.0; 9.0 7.0 4.0; 8.0 1.0 11.0;;; 10.0 7.0 3.0; 5.0 8.0 6.0; 2.0 10.0 8.0;;;; 4.0 2.0 6.0; 8.0 8.0 3.0; 5.0 2.0 6.0;;; 3.0 10.0 8.0; 7.0 4.0 9.0; 3.0 3.0 2.0;;; 7.0 7.0 1.0; 4.0 11.0 4.0; 10.0 6.0 9.0;;;;; 4.0 9.0 3.0; 7.0 9.0 2.0; 2.0 5.0 2.0;;; 9.0 10.0 1.0; 7.0 4.0 6.0; 7.0 10.0 3.0;;; 2.0 9.0 10.0; 2.0 4.0 9.0; 7.0 10.0 5.0;;;; 7.0 4.0 1.0; 2.0 5.0 10.0; 3.0 10.0 9.0;;; 11.0 5.0 1.0; 6.0 9.0 7.0; 1.0 3.0 11.0;;; 5.0 7.0 1.0; 5.0 9.0 4.0; 1.0 4.0 9.0;;;; 9.0 8.0 2.0; 6.0 3.0 2.0; 2.0 9.0 11.0;;; 10.0 10.0 2.0; 10.0 11.0 2.0; 2.0 4.0 6.0;;; 3.0 2.0 1.0; 6.0 2.0 2.0; 6.0 7.0 8.0;;;;;; 7.0 7.0 1.0; 7.0 8.0 1.0; 1.0 6.0 11.0;;; 7.0 9.0 2.0; 4.0 4.0 7.0; 7.0 8.0 3.0;;; 6.0 1.0 2.0; 2.0 5.0 3.0; 4.0 7.0 3.0;;;; 9.0 6.0 8.0; 8.0 4.0 10.0; 7.0 4.0 11.0;;; 9.0 9.0 10.0; 8.0 11.0 10.0; 7.0 5.0 10.0;;; 3.0 2.0 8.0; 2.0 7.0 10.0; 6.0 6.0 11.0;;;; 7.0 4.0 5.0; 5.0 5.0 8.0; 5.0 4.0 4.0;;; 7.0 3.0 6.0; 6.0 4.0 10.0; 6.0 5.0 7.0;;; 5.0 5.0 10.0; 9.0 11.0 5.0; 2.0 2.0 10.0;;;;; 11.0 9.0 9.0; 10.0 5.0 6.0; 2.0 3.0 6.0;;; 11.0 2.0 6.0; 3.0 4.0 9.0; 8.0 10.0 11.0;;; 11.0 2.0 5.0; 10.0 6.0 9.0; 9.0 3.0 11.0;;;; 6.0 7.0 3.0; 10.0 6.0 2.0; 6.0 1.0 4.0;;; 3.0 8.0 3.0; 10.0 10.0 1.0; 1.0 1.0 11.0;;; 3.0 7.0 4.0; 1.0 2.0 2.0; 2.0 2.0 9.0;;;; 11.0 10.0 6.0; 9.0 8.0 3.0; 10.0 2.0 4.0;;; 3.0 7.0 8.0; 1.0 10.0 1.0; 6.0 5.0 7.0;;; 5.0 9.0 10.0; 7.0 11.0 2.0; 6.0 2.0 9.0;;;;; 7.0 9.0 1.0; 7.0 6.0 10.0; 8.0 2.0 3.0;;; 3.0 3.0 5.0; 8.0 2.0 10.0; 8.0 5.0 7.0;;; 4.0 4.0 2.0; 9.0 10.0 9.0; 7.0 9.0 9.0;;;; 4.0 10.0 7.0; 6.0 6.0 10.0; 10.0 5.0 9.0;;; 7.0 7.0 5.0; 8.0 9.0 7.0; 3.0 1.0 2.0;;; 9.0 10.0 10.0; 1.0 11.0 1.0; 1.0 2.0 9.0;;;; 8.0 8.0 6.0; 10.0 3.0 2.0; 2.0 9.0 6.0;;; 11.0 1.0 3.0; 6.0 3.0 5.0; 6.0 8.0 2.0;;; 10.0 5.0 5.0; 10.0 6.0 2.0; 7.0 7.0 9.0;;;;;;; 3.0 7.0 1.0; 10.0 9.0 6.0; 1.0 6.0 2.0;;; 11.0 1.0 1.0; 1.0 8.0 1.0; 4.0 2.0 9.0;;; 10.0 3.0 6.0; 3.0 2.0 3.0; 5.0 10.0 5.0;;;; 9.0 6.0 9.0; 7.0 7.0 9.0; 2.0 9.0 2.0;;; 6.0 2.0 1.0; 10.0 3.0 3.0; 6.0 3.0 3.0;;; 2.0 10.0 10.0; 9.0 4.0 2.0; 5.0 2.0 11.0;;;; 2.0 2.0 5.0; 6.0 3.0 5.0; 8.0 8.0 10.0;;; 4.0 9.0 4.0; 6.0 3.0 7.0; 5.0 3.0 9.0;;; 9.0 10.0 4.0; 1.0 5.0 3.0; 6.0 1.0 11.0;;;;; 5.0 7.0 6.0; 1.0 5.0 5.0; 5.0 3.0 5.0;;; 7.0 1.0 4.0; 3.0 3.0 3.0; 2.0 6.0 3.0;;; 4.0 5.0 3.0; 8.0 9.0 2.0; 1.0 3.0 8.0;;;; 7.0 2.0 6.0; 1.0 11.0 5.0; 10.0 9.0 6.0;;; 10.0 7.0 10.0; 4.0 2.0 5.0; 4.0 8.0 3.0;;; 4.0 10.0 3.0; 9.0 7.0 1.0; 4.0 9.0 2.0;;;; 4.0 10.0 10.0; 2.0 4.0 6.0; 10.0 7.0 2.0;;; 3.0 7.0 6.0; 2.0 8.0 6.0; 4.0 4.0 6.0;;; 11.0 5.0 10.0; 10.0 9.0 7.0; 5.0 4.0 4.0;;;;; 6.0 6.0 6.0; 8.0 10.0 8.0; 2.0 8.0 11.0;;; 9.0 6.0 7.0; 6.0 2.0 2.0; 3.0 5.0 10.0;;; 7.0 2.0 3.0; 5.0 2.0 3.0; 3.0 9.0 2.0;;;; 7.0 2.0 7.0; 3.0 6.0 1.0; 2.0 6.0 6.0;;; 4.0 6.0 8.0; 4.0 3.0 4.0; 1.0 2.0 9.0;;; 6.0 2.0 5.0; 1.0 10.0 3.0; 7.0 2.0 10.0;;;; 3.0 8.0 4.0; 8.0 11.0 5.0; 3.0 9.0 2.0;;; 5.0 8.0 8.0; 8.0 2.0 10.0; 7.0 7.0 9.0;;; 7.0 8.0 7.0; 10.0 8.0 7.0; 7.0 2.0 7.0;;;;;; 7.0 5.0 8.0; 5.0 3.0 7.0; 6.0 2.0 3.0;;; 9.0 3.0 2.0; 10.0 3.0 1.0; 2.0 5.0 11.0;;; 9.0 10.0 9.0; 7.0 9.0 5.0; 5.0 1.0 11.0;;;; 7.0 7.0 6.0; 6.0 10.0 4.0; 6.0 8.0 5.0;;; 10.0 4.0 5.0; 1.0 5.0 3.0; 1.0 2.0 10.0;;; 11.0 10.0 2.0; 6.0 5.0 5.0; 1.0 1.0 4.0;;;; 8.0 2.0 2.0; 1.0 9.0 1.0; 9.0 8.0 8.0;;; 9.0 8.0 8.0; 4.0 5.0 4.0; 6.0 5.0 10.0;;; 2.0 10.0 2.0; 3.0 5.0 4.0; 9.0 4.0 9.0;;;;; 9.0 3.0 7.0; 6.0 9.0 10.0; 8.0 4.0 7.0;;; 5.0 1.0 8.0; 3.0 10.0 2.0; 10.0 4.0 4.0;;; 6.0 3.0 1.0; 2.0 11.0 9.0; 3.0 9.0 2.0;;;; 8.0 10.0 8.0; 5.0 4.0 4.0; 2.0 8.0 8.0;;; 2.0 1.0 1.0; 7.0 10.0 10.0; 4.0 7.0 10.0;;; 11.0 9.0 4.0; 10.0 6.0 7.0; 3.0 5.0 8.0;;;; 10.0 7.0 7.0; 7.0 5.0 3.0; 5.0 7.0 6.0;;; 10.0 2.0 5.0; 4.0 11.0 5.0; 3.0 5.0 9.0;;; 2.0 2.0 2.0; 5.0 2.0 1.0; 9.0 5.0 5.0;;;;; 5.0 4.0 2.0; 7.0 7.0 2.0; 7.0 6.0 6.0;;; 11.0 8.0 1.0; 4.0 2.0 1.0; 5.0 10.0 8.0;;; 10.0 2.0 1.0; 10.0 4.0 3.0; 6.0 10.0 3.0;;;; 10.0 7.0 1.0; 3.0 3.0 1.0; 3.0 9.0 11.0;;; 7.0 7.0 9.0; 7.0 6.0 7.0; 7.0 3.0 5.0;;; 10.0 8.0 1.0; 3.0 3.0 4.0; 7.0 6.0 4.0;;;; 8.0 6.0 10.0; 1.0 11.0 6.0; 6.0 1.0 9.0;;; 11.0 3.0 7.0; 3.0 6.0 6.0; 8.0 6.0 5.0;;; 9.0 6.0 5.0; 5.0 2.0 7.0; 8.0 9.0 3.0;;;;;; 6.0 4.0 1.0; 8.0 9.0 3.0; 3.0 8.0 2.0;;; 5.0 8.0 2.0; 2.0 2.0 5.0; 10.0 8.0 7.0;;; 4.0 9.0 3.0; 8.0 5.0 1.0; 9.0 5.0 10.0;;;; 8.0 2.0 8.0; 6.0 9.0 4.0; 6.0 7.0 2.0;;; 5.0 6.0 9.0; 5.0 3.0 3.0; 2.0 6.0 2.0;;; 5.0 4.0 7.0; 7.0 3.0 8.0; 1.0 4.0 2.0;;;; 8.0 7.0 7.0; 9.0 5.0 4.0; 5.0 5.0 11.0;;; 5.0 9.0 7.0; 2.0 3.0 1.0; 6.0 5.0 8.0;;; 2.0 2.0 9.0; 8.0 10.0 7.0; 10.0 2.0 6.0;;;;; 2.0 5.0 2.0; 6.0 10.0 10.0; 8.0 3.0 8.0;;; 11.0 1.0 8.0; 10.0 11.0 9.0; 9.0 3.0 7.0;;; 6.0 5.0 8.0; 9.0 9.0 10.0; 4.0 6.0 9.0;;;; 9.0 9.0 4.0; 1.0 3.0 8.0; 1.0 7.0 2.0;;; 6.0 9.0 5.0; 4.0 3.0 2.0; 9.0 9.0 8.0;;; 5.0 2.0 9.0; 8.0 6.0 6.0; 3.0 10.0 8.0;;;; 4.0 4.0 6.0; 4.0 6.0 5.0; 5.0 1.0 6.0;;; 3.0 8.0 10.0; 8.0 10.0 5.0; 9.0 1.0 10.0;;; 8.0 1.0 1.0; 1.0 2.0 9.0; 6.0 1.0 7.0;;;;; 6.0 10.0 10.0; 10.0 4.0 6.0; 4.0 4.0 11.0;;; 4.0 8.0 6.0; 9.0 6.0 7.0; 9.0 3.0 4.0;;; 3.0 10.0 1.0; 8.0 9.0 5.0; 4.0 5.0 5.0;;;; 5.0 5.0 4.0; 6.0 3.0 5.0; 3.0 3.0 8.0;;; 3.0 9.0 6.0; 8.0 5.0 9.0; 8.0 3.0 6.0;;; 5.0 2.0 4.0; 5.0 9.0 2.0; 5.0 9.0 5.0;;;; 8.0 6.0 8.0; 9.0 11.0 3.0; 4.0 3.0 10.0;;; 11.0 2.0 7.0; 2.0 9.0 9.0; 3.0 2.0 5.0;;; 11.0 6.0 1.0; 5.0 8.0 6.0; 4.0 9.0 11.0;;;;;;; 3.0 6.0 3.0; 3.0 6.0 8.0; 5.0 4.0 6.0;;; 7.0 10.0 6.0; 7.0 4.0 6.0; 4.0 10.0 8.0;;; 11.0 3.0 4.0; 5.0 9.0 4.0; 9.0 1.0 10.0;;;; 3.0 9.0 10.0; 5.0 8.0 4.0; 7.0 4.0 8.0;;; 5.0 4.0 6.0; 6.0 4.0 5.0; 7.0 3.0 7.0;;; 5.0 10.0 5.0; 10.0 11.0 9.0; 9.0 7.0 6.0;;;; 7.0 8.0 6.0; 6.0 11.0 3.0; 5.0 4.0 5.0;;; 6.0 7.0 3.0; 10.0 7.0 9.0; 10.0 1.0 9.0;;; 8.0 9.0 2.0; 10.0 6.0 4.0; 10.0 7.0 3.0;;;;; 6.0 9.0 2.0; 5.0 11.0 2.0; 5.0 7.0 4.0;;; 8.0 1.0 9.0; 3.0 6.0 7.0; 7.0 9.0 5.0;;; 5.0 7.0 6.0; 2.0 5.0 3.0; 2.0 1.0 10.0;;;; 5.0 5.0 10.0; 7.0 7.0 8.0; 2.0 3.0 10.0;;; 8.0 5.0 9.0; 2.0 5.0 9.0; 1.0 3.0 7.0;;; 9.0 9.0 6.0; 2.0 11.0 2.0; 2.0 10.0 4.0;;;; 5.0 7.0 3.0; 10.0 7.0 8.0; 3.0 9.0 9.0;;; 7.0 4.0 6.0; 7.0 11.0 2.0; 9.0 6.0 6.0;;; 3.0 10.0 10.0; 4.0 3.0 4.0; 10.0 7.0 9.0;;;;; 8.0 3.0 2.0; 10.0 9.0 9.0; 4.0 5.0 7.0;;; 9.0 9.0 2.0; 1.0 10.0 7.0; 10.0 2.0 2.0;;; 3.0 9.0 4.0; 8.0 6.0 9.0; 6.0 10.0 7.0;;;; 2.0 1.0 10.0; 5.0 9.0 8.0; 3.0 3.0 9.0;;; 8.0 8.0 1.0; 4.0 5.0 10.0; 1.0 9.0 9.0;;; 3.0 8.0 4.0; 10.0 9.0 3.0; 6.0 8.0 7.0;;;; 5.0 10.0 10.0; 6.0 2.0 7.0; 7.0 9.0 4.0;;; 8.0 5.0 1.0; 1.0 7.0 6.0; 9.0 9.0 9.0;;; 4.0 9.0 7.0; 6.0 2.0 4.0; 3.0 3.0 11.0;;;;;; 6.0 1.0 1.0; 8.0 8.0 2.0; 1.0 2.0 6.0;;; 4.0 5.0 7.0; 5.0 10.0 7.0; 4.0 5.0 7.0;;; 11.0 8.0 5.0; 5.0 2.0 9.0; 7.0 3.0 4.0;;;; 9.0 4.0 8.0; 7.0 6.0 9.0; 6.0 4.0 4.0;;; 4.0 7.0 2.0; 6.0 4.0 10.0; 9.0 2.0 4.0;;; 9.0 4.0 6.0; 5.0 9.0 5.0; 8.0 6.0 4.0;;;; 4.0 5.0 6.0; 9.0 8.0 6.0; 10.0 1.0 8.0;;; 4.0 8.0 3.0; 2.0 11.0 1.0; 2.0 3.0 2.0;;; 5.0 1.0 6.0; 2.0 5.0 5.0; 6.0 10.0 3.0;;;;; 3.0 8.0 10.0; 6.0 7.0 10.0; 5.0 8.0 10.0;;; 6.0 9.0 6.0; 3.0 2.0 9.0; 1.0 3.0 7.0;;; 11.0 5.0 8.0; 9.0 3.0 7.0; 8.0 6.0 7.0;;;; 4.0 8.0 3.0; 7.0 5.0 9.0; 7.0 8.0 4.0;;; 2.0 6.0 7.0; 9.0 6.0 9.0; 9.0 1.0 7.0;;; 11.0 10.0 6.0; 6.0 4.0 9.0; 4.0 7.0 10.0;;;; 2.0 2.0 9.0; 5.0 3.0 8.0; 9.0 9.0 8.0;;; 7.0 6.0 2.0; 6.0 9.0 1.0; 1.0 6.0 3.0;;; 6.0 10.0 6.0; 10.0 9.0 4.0; 3.0 1.0 11.0;;;;; 3.0 2.0 5.0; 6.0 8.0 3.0; 9.0 3.0 9.0;;; 4.0 3.0 3.0; 3.0 6.0 10.0; 9.0 4.0 8.0;;; 4.0 5.0 3.0; 3.0 3.0 10.0; 5.0 6.0 7.0;;;; 9.0 3.0 3.0; 3.0 5.0 6.0; 1.0 9.0 9.0;;; 10.0 10.0 8.0; 7.0 3.0 6.0; 1.0 5.0 4.0;;; 2.0 3.0 2.0; 9.0 2.0 7.0; 3.0 6.0 7.0;;;; 3.0 5.0 10.0; 4.0 8.0 2.0; 1.0 4.0 5.0;;; 4.0 2.0 2.0; 8.0 6.0 9.0; 6.0 1.0 9.0;;; 8.0 4.0 10.0; 3.0 11.0 10.0; 6.0 1.0 2.0;;;;;; 9.0 8.0 4.0; 8.0 9.0 5.0; 8.0 3.0 9.0;;; 4.0 8.0 6.0; 8.0 3.0 10.0; 8.0 4.0 10.0;;; 5.0 4.0 2.0; 6.0 10.0 6.0; 6.0 3.0 7.0;;;; 4.0 2.0 9.0; 7.0 11.0 9.0; 8.0 2.0 3.0;;; 4.0 5.0 6.0; 3.0 4.0 1.0; 9.0 10.0 2.0;;; 8.0 1.0 4.0; 8.0 10.0 2.0; 5.0 2.0 11.0;;;; 4.0 4.0 7.0; 5.0 9.0 5.0; 6.0 7.0 6.0;;; 7.0 5.0 6.0; 10.0 4.0 2.0; 10.0 3.0 2.0;;; 9.0 4.0 3.0; 7.0 8.0 1.0; 8.0 7.0 2.0;;;;; 10.0 7.0 2.0; 3.0 3.0 9.0; 1.0 5.0 8.0;;; 3.0 4.0 1.0; 8.0 7.0 10.0; 9.0 4.0 11.0;;; 3.0 1.0 8.0; 1.0 11.0 8.0; 4.0 2.0 4.0;;;; 8.0 8.0 6.0; 4.0 9.0 9.0; 7.0 10.0 7.0;;; 11.0 6.0 9.0; 7.0 10.0 5.0; 7.0 8.0 11.0;;; 6.0 7.0 6.0; 6.0 11.0 1.0; 10.0 9.0 10.0;;;; 8.0 2.0 1.0; 6.0 10.0 5.0; 1.0 5.0 10.0;;; 6.0 1.0 7.0; 6.0 10.0 10.0; 5.0 8.0 11.0;;; 4.0 10.0 10.0; 5.0 4.0 2.0; 3.0 3.0 4.0;;;;; 10.0 8.0 10.0; 8.0 4.0 4.0; 5.0 6.0 11.0;;; 11.0 10.0 2.0; 10.0 2.0 10.0; 1.0 1.0 5.0;;; 2.0 10.0 4.0; 6.0 2.0 5.0; 3.0 4.0 2.0;;;; 8.0 10.0 1.0; 10.0 10.0 10.0; 8.0 6.0 8.0;;; 9.0 6.0 3.0; 9.0 8.0 5.0; 4.0 6.0 11.0;;; 3.0 1.0 5.0; 7.0 7.0 6.0; 2.0 9.0 6.0;;;; 2.0 7.0 2.0; 3.0 4.0 9.0; 1.0 10.0 3.0;;; 5.0 2.0 6.0; 7.0 10.0 10.0; 4.0 3.0 3.0;;; 10.0 2.0 1.0; 4.0 8.0 4.0; 7.0 9.0 8.0
                        ]
                    ),
                    m_T1 = Categorical([0.2, 0.5, 0.3]),
                    m_T2 = Categorical([0.7, 0.2, 0.1]),
                    m_T3 = Categorical([0.1, 0.8, 0.1]),
                    m_T4 = Categorical([0.9, 0.1, 0.0]),
                    m_T5 = Categorical([0.05, 0.1, 0.85]),
                    m_T6 = Categorical([0.33, 0.33, 0.34])
                ),
                output = Categorical([0.3103502146054525, 0.3594842798033498, 0.33016550559119767])
            )
        ]
    end
end
